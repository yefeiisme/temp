// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientGSProtocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClientGSProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace WS_CS_NET_PACK {
class WS2CS_LOGINDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<WS2CS_LOGIN> {
} _WS2CS_LOGIN_default_instance_;
class CS2WS_LOGIN_RESULTDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CS2WS_LOGIN_RESULT> {
} _CS2WS_LOGIN_RESULT_default_instance_;

namespace protobuf_ClientGSProtocol_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WS2CS_LOGIN, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WS2CS_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WS2CS_LOGIN, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WS2CS_LOGIN, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS2WS_LOGIN_RESULT, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS2WS_LOGIN_RESULT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CS2WS_LOGIN_RESULT, result_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(WS2CS_LOGIN)},
  { 9, 15, sizeof(CS2WS_LOGIN_RESULT)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_WS2CS_LOGIN_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CS2WS_LOGIN_RESULT_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ClientGSProtocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _WS2CS_LOGIN_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CS2WS_LOGIN_RESULT_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _WS2CS_LOGIN_default_instance_.DefaultConstruct();
  _CS2WS_LOGIN_RESULT_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026ClientGSProtocol.proto\022\016WS_CS_NET_PACK"
      "\"0\n\013WS2CS_LOGIN\022\017\n\007account\030\001 \002(\014\022\020\n\010pass"
      "word\030\002 \002(\014\"$\n\022CS2WS_LOGIN_RESULT\022\016\n\006resu"
      "lt\030\001 \002(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientGSProtocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ClientGSProtocol_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WS2CS_LOGIN::kAccountFieldNumber;
const int WS2CS_LOGIN::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WS2CS_LOGIN::WS2CS_LOGIN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ClientGSProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WS_CS_NET_PACK.WS2CS_LOGIN)
}
WS2CS_LOGIN::WS2CS_LOGIN(const WS2CS_LOGIN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:WS_CS_NET_PACK.WS2CS_LOGIN)
}

void WS2CS_LOGIN::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WS2CS_LOGIN::~WS2CS_LOGIN() {
  // @@protoc_insertion_point(destructor:WS_CS_NET_PACK.WS2CS_LOGIN)
  SharedDtor();
}

void WS2CS_LOGIN::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WS2CS_LOGIN::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WS2CS_LOGIN::descriptor() {
  protobuf_ClientGSProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientGSProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WS2CS_LOGIN& WS2CS_LOGIN::default_instance() {
  protobuf_ClientGSProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

WS2CS_LOGIN* WS2CS_LOGIN::New(::google::protobuf::Arena* arena) const {
  WS2CS_LOGIN* n = new WS2CS_LOGIN;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WS2CS_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WS2CS_LOGIN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WS_CS_NET_PACK.WS2CS_LOGIN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WS_CS_NET_PACK.WS2CS_LOGIN)
  return false;
#undef DO_
}

void WS2CS_LOGIN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WS_CS_NET_PACK.WS2CS_LOGIN)
}

::google::protobuf::uint8* WS2CS_LOGIN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WS_CS_NET_PACK.WS2CS_LOGIN)
  return target;
}

size_t WS2CS_LOGIN::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_password()) {
    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  return total_size;
}
size_t WS2CS_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WS2CS_LOGIN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  const WS2CS_LOGIN* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WS2CS_LOGIN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WS_CS_NET_PACK.WS2CS_LOGIN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WS_CS_NET_PACK.WS2CS_LOGIN)
    MergeFrom(*source);
  }
}

void WS2CS_LOGIN::MergeFrom(const WS2CS_LOGIN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void WS2CS_LOGIN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WS2CS_LOGIN::CopyFrom(const WS2CS_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WS_CS_NET_PACK.WS2CS_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WS2CS_LOGIN::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void WS2CS_LOGIN::Swap(WS2CS_LOGIN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WS2CS_LOGIN::InternalSwap(WS2CS_LOGIN* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WS2CS_LOGIN::GetMetadata() const {
  protobuf_ClientGSProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientGSProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WS2CS_LOGIN

// required bytes account = 1;
bool WS2CS_LOGIN::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WS2CS_LOGIN::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void WS2CS_LOGIN::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void WS2CS_LOGIN::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& WS2CS_LOGIN::account() const {
  // @@protoc_insertion_point(field_get:WS_CS_NET_PACK.WS2CS_LOGIN.account)
  return account_.GetNoArena();
}
void WS2CS_LOGIN::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WS_CS_NET_PACK.WS2CS_LOGIN.account)
}
#if LANG_CXX11
void WS2CS_LOGIN::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WS_CS_NET_PACK.WS2CS_LOGIN.account)
}
#endif
void WS2CS_LOGIN::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WS_CS_NET_PACK.WS2CS_LOGIN.account)
}
void WS2CS_LOGIN::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WS_CS_NET_PACK.WS2CS_LOGIN.account)
}
::std::string* WS2CS_LOGIN::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:WS_CS_NET_PACK.WS2CS_LOGIN.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WS2CS_LOGIN::release_account() {
  // @@protoc_insertion_point(field_release:WS_CS_NET_PACK.WS2CS_LOGIN.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WS2CS_LOGIN::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:WS_CS_NET_PACK.WS2CS_LOGIN.account)
}

// required bytes password = 2;
bool WS2CS_LOGIN::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WS2CS_LOGIN::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void WS2CS_LOGIN::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void WS2CS_LOGIN::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& WS2CS_LOGIN::password() const {
  // @@protoc_insertion_point(field_get:WS_CS_NET_PACK.WS2CS_LOGIN.password)
  return password_.GetNoArena();
}
void WS2CS_LOGIN::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:WS_CS_NET_PACK.WS2CS_LOGIN.password)
}
#if LANG_CXX11
void WS2CS_LOGIN::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:WS_CS_NET_PACK.WS2CS_LOGIN.password)
}
#endif
void WS2CS_LOGIN::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:WS_CS_NET_PACK.WS2CS_LOGIN.password)
}
void WS2CS_LOGIN::set_password(const void* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:WS_CS_NET_PACK.WS2CS_LOGIN.password)
}
::std::string* WS2CS_LOGIN::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:WS_CS_NET_PACK.WS2CS_LOGIN.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WS2CS_LOGIN::release_password() {
  // @@protoc_insertion_point(field_release:WS_CS_NET_PACK.WS2CS_LOGIN.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WS2CS_LOGIN::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:WS_CS_NET_PACK.WS2CS_LOGIN.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CS2WS_LOGIN_RESULT::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CS2WS_LOGIN_RESULT::CS2WS_LOGIN_RESULT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ClientGSProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
}
CS2WS_LOGIN_RESULT::CS2WS_LOGIN_RESULT(const CS2WS_LOGIN_RESULT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
}

void CS2WS_LOGIN_RESULT::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CS2WS_LOGIN_RESULT::~CS2WS_LOGIN_RESULT() {
  // @@protoc_insertion_point(destructor:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  SharedDtor();
}

void CS2WS_LOGIN_RESULT::SharedDtor() {
}

void CS2WS_LOGIN_RESULT::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CS2WS_LOGIN_RESULT::descriptor() {
  protobuf_ClientGSProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientGSProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CS2WS_LOGIN_RESULT& CS2WS_LOGIN_RESULT::default_instance() {
  protobuf_ClientGSProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

CS2WS_LOGIN_RESULT* CS2WS_LOGIN_RESULT::New(::google::protobuf::Arena* arena) const {
  CS2WS_LOGIN_RESULT* n = new CS2WS_LOGIN_RESULT;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CS2WS_LOGIN_RESULT::Clear() {
// @@protoc_insertion_point(message_clear_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CS2WS_LOGIN_RESULT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  return false;
#undef DO_
}

void CS2WS_LOGIN_RESULT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
}

::google::protobuf::uint8* CS2WS_LOGIN_RESULT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  return target;
}

size_t CS2WS_LOGIN_RESULT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CS2WS_LOGIN_RESULT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  GOOGLE_DCHECK_NE(&from, this);
  const CS2WS_LOGIN_RESULT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CS2WS_LOGIN_RESULT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
    MergeFrom(*source);
  }
}

void CS2WS_LOGIN_RESULT::MergeFrom(const CS2WS_LOGIN_RESULT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CS2WS_LOGIN_RESULT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CS2WS_LOGIN_RESULT::CopyFrom(const CS2WS_LOGIN_RESULT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CS2WS_LOGIN_RESULT::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CS2WS_LOGIN_RESULT::Swap(CS2WS_LOGIN_RESULT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CS2WS_LOGIN_RESULT::InternalSwap(CS2WS_LOGIN_RESULT* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CS2WS_LOGIN_RESULT::GetMetadata() const {
  protobuf_ClientGSProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientGSProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CS2WS_LOGIN_RESULT

// required uint32 result = 1;
bool CS2WS_LOGIN_RESULT::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CS2WS_LOGIN_RESULT::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CS2WS_LOGIN_RESULT::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CS2WS_LOGIN_RESULT::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 CS2WS_LOGIN_RESULT::result() const {
  // @@protoc_insertion_point(field_get:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT.result)
  return result_;
}
void CS2WS_LOGIN_RESULT::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:WS_CS_NET_PACK.CS2WS_LOGIN_RESULT.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace WS_CS_NET_PACK

// @@protoc_insertion_point(global_scope)
