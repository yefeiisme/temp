// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: App_Server_Protocol.proto

#ifndef PROTOBUF_App_5fServer_5fProtocol_2eproto__INCLUDED
#define PROTOBUF_App_5fServer_5fProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace APP_SERVER_NET_Protocol {
class APP2S_Add_Sensor;
class APP2S_Add_SensorDefaultTypeInternal;
extern APP2S_Add_SensorDefaultTypeInternal _APP2S_Add_Sensor_default_instance_;
class APP2S_Add_Slope;
class APP2S_Add_SlopeDefaultTypeInternal;
extern APP2S_Add_SlopeDefaultTypeInternal _APP2S_Add_Slope_default_instance_;
class APP2S_Del_Sensor;
class APP2S_Del_SensorDefaultTypeInternal;
extern APP2S_Del_SensorDefaultTypeInternal _APP2S_Del_Sensor_default_instance_;
class APP2S_Del_Slope;
class APP2S_Del_SlopeDefaultTypeInternal;
extern APP2S_Del_SlopeDefaultTypeInternal _APP2S_Del_Slope_default_instance_;
class APP2S_Find_Sensor;
class APP2S_Find_SensorDefaultTypeInternal;
extern APP2S_Find_SensorDefaultTypeInternal _APP2S_Find_Sensor_default_instance_;
class APP2S_Find_Slope;
class APP2S_Find_SlopeDefaultTypeInternal;
extern APP2S_Find_SlopeDefaultTypeInternal _APP2S_Find_Slope_default_instance_;
class APP2S_Modify_Password;
class APP2S_Modify_PasswordDefaultTypeInternal;
extern APP2S_Modify_PasswordDefaultTypeInternal _APP2S_Modify_Password_default_instance_;
class APP2S_Request_Sensor_History;
class APP2S_Request_Sensor_HistoryDefaultTypeInternal;
extern APP2S_Request_Sensor_HistoryDefaultTypeInternal _APP2S_Request_Sensor_History_default_instance_;
class APP2S_Request_Sensor_List;
class APP2S_Request_Sensor_ListDefaultTypeInternal;
extern APP2S_Request_Sensor_ListDefaultTypeInternal _APP2S_Request_Sensor_List_default_instance_;
class APP2S_Request_Slope_List;
class APP2S_Request_Slope_ListDefaultTypeInternal;
extern APP2S_Request_Slope_ListDefaultTypeInternal _APP2S_Request_Slope_List_default_instance_;
class APP2S_Update_Sensor_Data;
class APP2S_Update_Sensor_DataDefaultTypeInternal;
extern APP2S_Update_Sensor_DataDefaultTypeInternal _APP2S_Update_Sensor_Data_default_instance_;
class APP2S_Update_Slope_Data;
class APP2S_Update_Slope_DataDefaultTypeInternal;
extern APP2S_Update_Slope_DataDefaultTypeInternal _APP2S_Update_Slope_Data_default_instance_;
class App2S_Login;
class App2S_LoginDefaultTypeInternal;
extern App2S_LoginDefaultTypeInternal _App2S_Login_default_instance_;
class S2APP_Add_Sensor;
class S2APP_Add_SensorDefaultTypeInternal;
extern S2APP_Add_SensorDefaultTypeInternal _S2APP_Add_Sensor_default_instance_;
class S2APP_Del_Sensor;
class S2APP_Del_SensorDefaultTypeInternal;
extern S2APP_Del_SensorDefaultTypeInternal _S2APP_Del_Sensor_default_instance_;
class S2APP_Del_Slope;
class S2APP_Del_SlopeDefaultTypeInternal;
extern S2APP_Del_SlopeDefaultTypeInternal _S2APP_Del_Slope_default_instance_;
class S2APP_ERROR;
class S2APP_ERRORDefaultTypeInternal;
extern S2APP_ERRORDefaultTypeInternal _S2APP_ERROR_default_instance_;
class S2APP_Modify_Password_Result;
class S2APP_Modify_Password_ResultDefaultTypeInternal;
extern S2APP_Modify_Password_ResultDefaultTypeInternal _S2APP_Modify_Password_Result_default_instance_;
class S2APP_New_Slope;
class S2APP_New_SlopeDefaultTypeInternal;
extern S2APP_New_SlopeDefaultTypeInternal _S2APP_New_Slope_default_instance_;
class S2APP_Update_Sensor;
class S2APP_Update_SensorDefaultTypeInternal;
extern S2APP_Update_SensorDefaultTypeInternal _S2APP_Update_Sensor_default_instance_;
class S2APP_Update_Slope;
class S2APP_Update_SlopeDefaultTypeInternal;
extern S2APP_Update_SlopeDefaultTypeInternal _S2APP_Update_Slope_default_instance_;
class S2App_Login_Result;
class S2App_Login_ResultDefaultTypeInternal;
extern S2App_Login_ResultDefaultTypeInternal _S2App_Login_Result_default_instance_;
class S2App_Login_Result_ServerData;
class S2App_Login_Result_ServerDataDefaultTypeInternal;
extern S2App_Login_Result_ServerDataDefaultTypeInternal _S2App_Login_Result_ServerData_default_instance_;
class S2App_Sensor_History;
class S2App_Sensor_HistoryDefaultTypeInternal;
extern S2App_Sensor_HistoryDefaultTypeInternal _S2App_Sensor_History_default_instance_;
class S2App_Sensor_History_SensorData;
class S2App_Sensor_History_SensorDataDefaultTypeInternal;
extern S2App_Sensor_History_SensorDataDefaultTypeInternal _S2App_Sensor_History_SensorData_default_instance_;
class S2App_Sensor_List;
class S2App_Sensor_ListDefaultTypeInternal;
extern S2App_Sensor_ListDefaultTypeInternal _S2App_Sensor_List_default_instance_;
class S2App_Sensor_List_SensorData;
class S2App_Sensor_List_SensorDataDefaultTypeInternal;
extern S2App_Sensor_List_SensorDataDefaultTypeInternal _S2App_Sensor_List_SensorData_default_instance_;
class S2App_Slope_List;
class S2App_Slope_ListDefaultTypeInternal;
extern S2App_Slope_ListDefaultTypeInternal _S2App_Slope_List_default_instance_;
class S2App_Slope_List_SlopeData;
class S2App_Slope_List_SlopeDataDefaultTypeInternal;
extern S2App_Slope_List_SlopeDataDefaultTypeInternal _S2App_Slope_List_SlopeData_default_instance_;
}  // namespace APP_SERVER_NET_Protocol

namespace APP_SERVER_NET_Protocol {

namespace protobuf_App_5fServer_5fProtocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_App_5fServer_5fProtocol_2eproto

enum APP2S {
  app2s_login = 0,
  app2s_request_slope_list = 1,
  app2s_request_sensor_list = 2,
  app2s_request_sensor_history = 3,
  app2s_ping = 4,
  app2s_request_all_list = 5,
  app2s_add_slope = 6,
  app2s_del_slope = 7,
  app2s_update_slope_data = 8,
  app2s_add_sensor = 9,
  app2s_del_sensor = 10,
  app2s_update_sensor_data = 11,
  app2s_modify_password = 12,
  app2s_find_slope = 13,
  app2s_find_sensor = 14,
  app2s_max = 256
};
bool APP2S_IsValid(int value);
const APP2S APP2S_MIN = app2s_login;
const APP2S APP2S_MAX = app2s_max;
const int APP2S_ARRAYSIZE = APP2S_MAX + 1;

const ::google::protobuf::EnumDescriptor* APP2S_descriptor();
inline const ::std::string& APP2S_Name(APP2S value) {
  return ::google::protobuf::internal::NameOfEnum(
    APP2S_descriptor(), value);
}
inline bool APP2S_Parse(
    const ::std::string& name, APP2S* value) {
  return ::google::protobuf::internal::ParseNamedEnum<APP2S>(
    APP2S_descriptor(), name, value);
}
enum S2APP {
  s2app_login_result = 0,
  s2app_slope_list = 1,
  s2app_sensor_list = 2,
  s2app_sensor_history = 3,
  s2app_all_list_end = 4,
  s2app_error = 5,
  s2app_new_slope = 6,
  s2app_del_slope = 7,
  s2app_update_slope = 8,
  s2app_add_sensor = 9,
  s2app_del_sensor = 10,
  s2app_update_sensor = 11,
  s2app_modify_password_result = 12,
  s2app_max = 256
};
bool S2APP_IsValid(int value);
const S2APP S2APP_MIN = s2app_login_result;
const S2APP S2APP_MAX = s2app_max;
const int S2APP_ARRAYSIZE = S2APP_MAX + 1;

const ::google::protobuf::EnumDescriptor* S2APP_descriptor();
inline const ::std::string& S2APP_Name(S2APP value) {
  return ::google::protobuf::internal::NameOfEnum(
    S2APP_descriptor(), value);
}
inline bool S2APP_Parse(
    const ::std::string& name, S2APP* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S2APP>(
    S2APP_descriptor(), name, value);
}
// ===================================================================

class App2S_Login : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.App2S_Login) */ {
 public:
  App2S_Login();
  virtual ~App2S_Login();

  App2S_Login(const App2S_Login& from);

  inline App2S_Login& operator=(const App2S_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const App2S_Login& default_instance();

  static inline const App2S_Login* internal_default_instance() {
    return reinterpret_cast<const App2S_Login*>(
               &_App2S_Login_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(App2S_Login* other);

  // implements Message ----------------------------------------------

  inline App2S_Login* New() const PROTOBUF_FINAL { return New(NULL); }

  App2S_Login* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const App2S_Login& from);
  void MergeFrom(const App2S_Login& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(App2S_Login* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required bytes password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.App2S_Login)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Request_Slope_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List) */ {
 public:
  APP2S_Request_Slope_List();
  virtual ~APP2S_Request_Slope_List();

  APP2S_Request_Slope_List(const APP2S_Request_Slope_List& from);

  inline APP2S_Request_Slope_List& operator=(const APP2S_Request_Slope_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Request_Slope_List& default_instance();

  static inline const APP2S_Request_Slope_List* internal_default_instance() {
    return reinterpret_cast<const APP2S_Request_Slope_List*>(
               &_APP2S_Request_Slope_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(APP2S_Request_Slope_List* other);

  // implements Message ----------------------------------------------

  inline APP2S_Request_Slope_List* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Request_Slope_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Request_Slope_List& from);
  void MergeFrom(const APP2S_Request_Slope_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Request_Slope_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 server_id = 1;
  bool has_server_id() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
 private:
  void set_has_server_id();
  void clear_has_server_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_id_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Request_Sensor_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List) */ {
 public:
  APP2S_Request_Sensor_List();
  virtual ~APP2S_Request_Sensor_List();

  APP2S_Request_Sensor_List(const APP2S_Request_Sensor_List& from);

  inline APP2S_Request_Sensor_List& operator=(const APP2S_Request_Sensor_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Request_Sensor_List& default_instance();

  static inline const APP2S_Request_Sensor_List* internal_default_instance() {
    return reinterpret_cast<const APP2S_Request_Sensor_List*>(
               &_APP2S_Request_Sensor_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(APP2S_Request_Sensor_List* other);

  // implements Message ----------------------------------------------

  inline APP2S_Request_Sensor_List* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Request_Sensor_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Request_Sensor_List& from);
  void MergeFrom(const APP2S_Request_Sensor_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Request_Sensor_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 slope_id = 1;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 1;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required uint32 sensor_type = 2;
  bool has_sensor_type() const;
  void clear_sensor_type();
  static const int kSensorTypeFieldNumber = 2;
  ::google::protobuf::uint32 sensor_type() const;
  void set_sensor_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
 private:
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_sensor_type();
  void clear_has_sensor_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 slope_id_;
  ::google::protobuf::uint32 sensor_type_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Request_Sensor_History : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History) */ {
 public:
  APP2S_Request_Sensor_History();
  virtual ~APP2S_Request_Sensor_History();

  APP2S_Request_Sensor_History(const APP2S_Request_Sensor_History& from);

  inline APP2S_Request_Sensor_History& operator=(const APP2S_Request_Sensor_History& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Request_Sensor_History& default_instance();

  static inline const APP2S_Request_Sensor_History* internal_default_instance() {
    return reinterpret_cast<const APP2S_Request_Sensor_History*>(
               &_APP2S_Request_Sensor_History_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(APP2S_Request_Sensor_History* other);

  // implements Message ----------------------------------------------

  inline APP2S_Request_Sensor_History* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Request_Sensor_History* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Request_Sensor_History& from);
  void MergeFrom(const APP2S_Request_Sensor_History& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Request_Sensor_History* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 sensor_id = 1;
  bool has_sensor_id() const;
  void clear_sensor_id();
  static const int kSensorIdFieldNumber = 1;
  ::google::protobuf::uint32 sensor_id() const;
  void set_sensor_id(::google::protobuf::uint32 value);

  // required uint32 begin_time = 2;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // required uint32 end_time = 3;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
 private:
  void set_has_sensor_id();
  void clear_has_sensor_id();
  void set_has_begin_time();
  void clear_has_begin_time();
  void set_has_end_time();
  void clear_has_end_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 sensor_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Add_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Add_Slope) */ {
 public:
  APP2S_Add_Slope();
  virtual ~APP2S_Add_Slope();

  APP2S_Add_Slope(const APP2S_Add_Slope& from);

  inline APP2S_Add_Slope& operator=(const APP2S_Add_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Add_Slope& default_instance();

  static inline const APP2S_Add_Slope* internal_default_instance() {
    return reinterpret_cast<const APP2S_Add_Slope*>(
               &_APP2S_Add_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(APP2S_Add_Slope* other);

  // implements Message ----------------------------------------------

  inline APP2S_Add_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Add_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Add_Slope& from);
  void MergeFrom(const APP2S_Add_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Add_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required double longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Add_Slope)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Del_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Del_Slope) */ {
 public:
  APP2S_Del_Slope();
  virtual ~APP2S_Del_Slope();

  APP2S_Del_Slope(const APP2S_Del_Slope& from);

  inline APP2S_Del_Slope& operator=(const APP2S_Del_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Del_Slope& default_instance();

  static inline const APP2S_Del_Slope* internal_default_instance() {
    return reinterpret_cast<const APP2S_Del_Slope*>(
               &_APP2S_Del_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(APP2S_Del_Slope* other);

  // implements Message ----------------------------------------------

  inline APP2S_Del_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Del_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Del_Slope& from);
  void MergeFrom(const APP2S_Del_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Del_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Del_Slope)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Update_Slope_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data) */ {
 public:
  APP2S_Update_Slope_Data();
  virtual ~APP2S_Update_Slope_Data();

  APP2S_Update_Slope_Data(const APP2S_Update_Slope_Data& from);

  inline APP2S_Update_Slope_Data& operator=(const APP2S_Update_Slope_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Update_Slope_Data& default_instance();

  static inline const APP2S_Update_Slope_Data* internal_default_instance() {
    return reinterpret_cast<const APP2S_Update_Slope_Data*>(
               &_APP2S_Update_Slope_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(APP2S_Update_Slope_Data* other);

  // implements Message ----------------------------------------------

  inline APP2S_Update_Slope_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Update_Slope_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Update_Slope_Data& from);
  void MergeFrom(const APP2S_Update_Slope_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Update_Slope_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required double longitude = 4;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 5;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double longitude_;
  double latitude_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Add_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Add_Sensor) */ {
 public:
  APP2S_Add_Sensor();
  virtual ~APP2S_Add_Sensor();

  APP2S_Add_Sensor(const APP2S_Add_Sensor& from);

  inline APP2S_Add_Sensor& operator=(const APP2S_Add_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Add_Sensor& default_instance();

  static inline const APP2S_Add_Sensor* internal_default_instance() {
    return reinterpret_cast<const APP2S_Add_Sensor*>(
               &_APP2S_Add_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(APP2S_Add_Sensor* other);

  // implements Message ----------------------------------------------

  inline APP2S_Add_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Add_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Add_Sensor& from);
  void MergeFrom(const APP2S_Add_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Add_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required bytes description = 6;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 6;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 slope_id = 2;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 2;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required double longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Add_Sensor)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();
  void set_has_description();
  void clear_has_description();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 slope_id_;
  double longitude_;
  double latitude_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Del_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Del_Sensor) */ {
 public:
  APP2S_Del_Sensor();
  virtual ~APP2S_Del_Sensor();

  APP2S_Del_Sensor(const APP2S_Del_Sensor& from);

  inline APP2S_Del_Sensor& operator=(const APP2S_Del_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Del_Sensor& default_instance();

  static inline const APP2S_Del_Sensor* internal_default_instance() {
    return reinterpret_cast<const APP2S_Del_Sensor*>(
               &_APP2S_Del_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(APP2S_Del_Sensor* other);

  // implements Message ----------------------------------------------

  inline APP2S_Del_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Del_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Del_Sensor& from);
  void MergeFrom(const APP2S_Del_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Del_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Del_Sensor)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Update_Sensor_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data) */ {
 public:
  APP2S_Update_Sensor_Data();
  virtual ~APP2S_Update_Sensor_Data();

  APP2S_Update_Sensor_Data(const APP2S_Update_Sensor_Data& from);

  inline APP2S_Update_Sensor_Data& operator=(const APP2S_Update_Sensor_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Update_Sensor_Data& default_instance();

  static inline const APP2S_Update_Sensor_Data* internal_default_instance() {
    return reinterpret_cast<const APP2S_Update_Sensor_Data*>(
               &_APP2S_Update_Sensor_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(APP2S_Update_Sensor_Data* other);

  // implements Message ----------------------------------------------

  inline APP2S_Update_Sensor_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Update_Sensor_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Update_Sensor_Data& from);
  void MergeFrom(const APP2S_Update_Sensor_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Update_Sensor_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required bytes description = 7;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 7;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required double longitude = 4;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 5;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 slope_id = 3;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 3;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();
  void set_has_description();
  void clear_has_description();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 slope_id_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Modify_Password : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Modify_Password) */ {
 public:
  APP2S_Modify_Password();
  virtual ~APP2S_Modify_Password();

  APP2S_Modify_Password(const APP2S_Modify_Password& from);

  inline APP2S_Modify_Password& operator=(const APP2S_Modify_Password& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Modify_Password& default_instance();

  static inline const APP2S_Modify_Password* internal_default_instance() {
    return reinterpret_cast<const APP2S_Modify_Password*>(
               &_APP2S_Modify_Password_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(APP2S_Modify_Password* other);

  // implements Message ----------------------------------------------

  inline APP2S_Modify_Password* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Modify_Password* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Modify_Password& from);
  void MergeFrom(const APP2S_Modify_Password& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Modify_Password* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const void* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // required bytes new_password = 2;
  bool has_new_password() const;
  void clear_new_password();
  static const int kNewPasswordFieldNumber = 2;
  const ::std::string& new_password() const;
  void set_new_password(const ::std::string& value);
  #if LANG_CXX11
  void set_new_password(::std::string&& value);
  #endif
  void set_new_password(const char* value);
  void set_new_password(const void* value, size_t size);
  ::std::string* mutable_new_password();
  ::std::string* release_new_password();
  void set_allocated_new_password(::std::string* new_password);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Modify_Password)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_new_password();
  void clear_has_new_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr new_password_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Find_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Find_Slope) */ {
 public:
  APP2S_Find_Slope();
  virtual ~APP2S_Find_Slope();

  APP2S_Find_Slope(const APP2S_Find_Slope& from);

  inline APP2S_Find_Slope& operator=(const APP2S_Find_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Find_Slope& default_instance();

  static inline const APP2S_Find_Slope* internal_default_instance() {
    return reinterpret_cast<const APP2S_Find_Slope*>(
               &_APP2S_Find_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(APP2S_Find_Slope* other);

  // implements Message ----------------------------------------------

  inline APP2S_Find_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Find_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Find_Slope& from);
  void MergeFrom(const APP2S_Find_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Find_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes slope_name = 2;
  bool has_slope_name() const;
  void clear_slope_name();
  static const int kSlopeNameFieldNumber = 2;
  const ::std::string& slope_name() const;
  void set_slope_name(const ::std::string& value);
  #if LANG_CXX11
  void set_slope_name(::std::string&& value);
  #endif
  void set_slope_name(const char* value);
  void set_slope_name(const void* value, size_t size);
  ::std::string* mutable_slope_name();
  ::std::string* release_slope_name();
  void set_allocated_slope_name(::std::string* slope_name);

  // required uint32 slope_id = 1;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 1;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Find_Slope)
 private:
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_slope_name();
  void clear_has_slope_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr slope_name_;
  ::google::protobuf::uint32 slope_id_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class APP2S_Find_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.APP2S_Find_Sensor) */ {
 public:
  APP2S_Find_Sensor();
  virtual ~APP2S_Find_Sensor();

  APP2S_Find_Sensor(const APP2S_Find_Sensor& from);

  inline APP2S_Find_Sensor& operator=(const APP2S_Find_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const APP2S_Find_Sensor& default_instance();

  static inline const APP2S_Find_Sensor* internal_default_instance() {
    return reinterpret_cast<const APP2S_Find_Sensor*>(
               &_APP2S_Find_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(APP2S_Find_Sensor* other);

  // implements Message ----------------------------------------------

  inline APP2S_Find_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  APP2S_Find_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const APP2S_Find_Sensor& from);
  void MergeFrom(const APP2S_Find_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(APP2S_Find_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes slope_name = 2;
  bool has_slope_name() const;
  void clear_slope_name();
  static const int kSlopeNameFieldNumber = 2;
  const ::std::string& slope_name() const;
  void set_slope_name(const ::std::string& value);
  #if LANG_CXX11
  void set_slope_name(::std::string&& value);
  #endif
  void set_slope_name(const char* value);
  void set_slope_name(const void* value, size_t size);
  ::std::string* mutable_slope_name();
  ::std::string* release_slope_name();
  void set_allocated_slope_name(::std::string* slope_name);

  // required uint32 slope_id = 1;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 1;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required uint32 sensor_id = 3;
  bool has_sensor_id() const;
  void clear_sensor_id();
  static const int kSensorIdFieldNumber = 3;
  ::google::protobuf::uint32 sensor_id() const;
  void set_sensor_id(::google::protobuf::uint32 value);

  // required uint32 sensor_type = 4;
  bool has_sensor_type() const;
  void clear_sensor_type();
  static const int kSensorTypeFieldNumber = 4;
  ::google::protobuf::uint32 sensor_type() const;
  void set_sensor_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.APP2S_Find_Sensor)
 private:
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_slope_name();
  void clear_has_slope_name();
  void set_has_sensor_id();
  void clear_has_sensor_id();
  void set_has_sensor_type();
  void clear_has_sensor_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr slope_name_;
  ::google::protobuf::uint32 slope_id_;
  ::google::protobuf::uint32 sensor_id_;
  ::google::protobuf::uint32 sensor_type_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Login_Result_ServerData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData) */ {
 public:
  S2App_Login_Result_ServerData();
  virtual ~S2App_Login_Result_ServerData();

  S2App_Login_Result_ServerData(const S2App_Login_Result_ServerData& from);

  inline S2App_Login_Result_ServerData& operator=(const S2App_Login_Result_ServerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Login_Result_ServerData& default_instance();

  static inline const S2App_Login_Result_ServerData* internal_default_instance() {
    return reinterpret_cast<const S2App_Login_Result_ServerData*>(
               &_S2App_Login_Result_ServerData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(S2App_Login_Result_ServerData* other);

  // implements Message ----------------------------------------------

  inline S2App_Login_Result_ServerData* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Login_Result_ServerData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Login_Result_ServerData& from);
  void MergeFrom(const S2App_Login_Result_ServerData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Login_Result_ServerData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes ip = 2;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 port = 3;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 port_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Login_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Login_Result) */ {
 public:
  S2App_Login_Result();
  virtual ~S2App_Login_Result();

  S2App_Login_Result(const S2App_Login_Result& from);

  inline S2App_Login_Result& operator=(const S2App_Login_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Login_Result& default_instance();

  static inline const S2App_Login_Result* internal_default_instance() {
    return reinterpret_cast<const S2App_Login_Result*>(
               &_S2App_Login_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(S2App_Login_Result* other);

  // implements Message ----------------------------------------------

  inline S2App_Login_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Login_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Login_Result& from);
  void MergeFrom(const S2App_Login_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Login_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S2App_Login_Result_ServerData ServerData;

  // accessors -------------------------------------------------------

  // repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
  int server_list_size() const;
  void clear_server_list();
  static const int kServerListFieldNumber = 2;
  const ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData& server_list(int index) const;
  ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* mutable_server_list(int index);
  ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* add_server_list();
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >*
      mutable_server_list();
  const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >&
      server_list() const;

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Login_Result)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData > server_list_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Slope_List_SlopeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData) */ {
 public:
  S2App_Slope_List_SlopeData();
  virtual ~S2App_Slope_List_SlopeData();

  S2App_Slope_List_SlopeData(const S2App_Slope_List_SlopeData& from);

  inline S2App_Slope_List_SlopeData& operator=(const S2App_Slope_List_SlopeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Slope_List_SlopeData& default_instance();

  static inline const S2App_Slope_List_SlopeData* internal_default_instance() {
    return reinterpret_cast<const S2App_Slope_List_SlopeData*>(
               &_S2App_Slope_List_SlopeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(S2App_Slope_List_SlopeData* other);

  // implements Message ----------------------------------------------

  inline S2App_Slope_List_SlopeData* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Slope_List_SlopeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Slope_List_SlopeData& from);
  void MergeFrom(const S2App_Slope_List_SlopeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Slope_List_SlopeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_state();
  void clear_has_state();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 state_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Slope_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Slope_List) */ {
 public:
  S2App_Slope_List();
  virtual ~S2App_Slope_List();

  S2App_Slope_List(const S2App_Slope_List& from);

  inline S2App_Slope_List& operator=(const S2App_Slope_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Slope_List& default_instance();

  static inline const S2App_Slope_List* internal_default_instance() {
    return reinterpret_cast<const S2App_Slope_List*>(
               &_S2App_Slope_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(S2App_Slope_List* other);

  // implements Message ----------------------------------------------

  inline S2App_Slope_List* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Slope_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Slope_List& from);
  void MergeFrom(const S2App_Slope_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Slope_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S2App_Slope_List_SlopeData SlopeData;

  // accessors -------------------------------------------------------

  // repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
  int slope_list_size() const;
  void clear_slope_list();
  static const int kSlopeListFieldNumber = 1;
  const ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData& slope_list(int index) const;
  ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* mutable_slope_list(int index);
  ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* add_slope_list();
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >*
      mutable_slope_list();
  const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >&
      slope_list() const;

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Slope_List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData > slope_list_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Sensor_List_SensorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData) */ {
 public:
  S2App_Sensor_List_SensorData();
  virtual ~S2App_Sensor_List_SensorData();

  S2App_Sensor_List_SensorData(const S2App_Sensor_List_SensorData& from);

  inline S2App_Sensor_List_SensorData& operator=(const S2App_Sensor_List_SensorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Sensor_List_SensorData& default_instance();

  static inline const S2App_Sensor_List_SensorData* internal_default_instance() {
    return reinterpret_cast<const S2App_Sensor_List_SensorData*>(
               &_S2App_Sensor_List_SensorData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(S2App_Sensor_List_SensorData* other);

  // implements Message ----------------------------------------------

  inline S2App_Sensor_List_SensorData* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Sensor_List_SensorData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Sensor_List_SensorData& from);
  void MergeFrom(const S2App_Sensor_List_SensorData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Sensor_List_SensorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes url = 16;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 16;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required bytes description = 17;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 17;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // required uint32 slope_id = 4;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 4;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // required double cur_value1 = 7;
  bool has_cur_value1() const;
  void clear_cur_value1();
  static const int kCurValue1FieldNumber = 7;
  double cur_value1() const;
  void set_cur_value1(double value);

  // required double cur_value2 = 8;
  bool has_cur_value2() const;
  void clear_cur_value2();
  static const int kCurValue2FieldNumber = 8;
  double cur_value2() const;
  void set_cur_value2(double value);

  // required double cur_value3 = 9;
  bool has_cur_value3() const;
  void clear_cur_value3();
  static const int kCurValue3FieldNumber = 9;
  double cur_value3() const;
  void set_cur_value3(double value);

  // required double avg_value1 = 10;
  bool has_avg_value1() const;
  void clear_avg_value1();
  static const int kAvgValue1FieldNumber = 10;
  double avg_value1() const;
  void set_avg_value1(double value);

  // required double avg_value2 = 11;
  bool has_avg_value2() const;
  void clear_avg_value2();
  static const int kAvgValue2FieldNumber = 11;
  double avg_value2() const;
  void set_avg_value2(double value);

  // required double avg_value3 = 12;
  bool has_avg_value3() const;
  void clear_avg_value3();
  static const int kAvgValue3FieldNumber = 12;
  double avg_value3() const;
  void set_avg_value3(double value);

  // required double offset_value1 = 13;
  bool has_offset_value1() const;
  void clear_offset_value1();
  static const int kOffsetValue1FieldNumber = 13;
  double offset_value1() const;
  void set_offset_value1(double value);

  // required double offset_value2 = 14;
  bool has_offset_value2() const;
  void clear_offset_value2();
  static const int kOffsetValue2FieldNumber = 14;
  double offset_value2() const;
  void set_offset_value2(double value);

  // required double offset_value3 = 15;
  bool has_offset_value3() const;
  void clear_offset_value3();
  static const int kOffsetValue3FieldNumber = 15;
  double offset_value3() const;
  void set_offset_value3(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_state();
  void clear_has_state();
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_cur_value1();
  void clear_has_cur_value1();
  void set_has_cur_value2();
  void clear_has_cur_value2();
  void set_has_cur_value3();
  void clear_has_cur_value3();
  void set_has_avg_value1();
  void clear_has_avg_value1();
  void set_has_avg_value2();
  void clear_has_avg_value2();
  void set_has_avg_value3();
  void clear_has_avg_value3();
  void set_has_offset_value1();
  void clear_has_offset_value1();
  void set_has_offset_value2();
  void clear_has_offset_value2();
  void set_has_offset_value3();
  void clear_has_offset_value3();
  void set_has_url();
  void clear_has_url();
  void set_has_description();
  void clear_has_description();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 slope_id_;
  double longitude_;
  double latitude_;
  double cur_value1_;
  double cur_value2_;
  double cur_value3_;
  double avg_value1_;
  double avg_value2_;
  double avg_value3_;
  double offset_value1_;
  double offset_value2_;
  double offset_value3_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Sensor_List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Sensor_List) */ {
 public:
  S2App_Sensor_List();
  virtual ~S2App_Sensor_List();

  S2App_Sensor_List(const S2App_Sensor_List& from);

  inline S2App_Sensor_List& operator=(const S2App_Sensor_List& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Sensor_List& default_instance();

  static inline const S2App_Sensor_List* internal_default_instance() {
    return reinterpret_cast<const S2App_Sensor_List*>(
               &_S2App_Sensor_List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(S2App_Sensor_List* other);

  // implements Message ----------------------------------------------

  inline S2App_Sensor_List* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Sensor_List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Sensor_List& from);
  void MergeFrom(const S2App_Sensor_List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Sensor_List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S2App_Sensor_List_SensorData SensorData;

  // accessors -------------------------------------------------------

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
  int sensor_list_size() const;
  void clear_sensor_list();
  static const int kSensorListFieldNumber = 1;
  const ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData& sensor_list(int index) const;
  ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* mutable_sensor_list(int index);
  ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* add_sensor_list();
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >*
      mutable_sensor_list();
  const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >&
      sensor_list() const;

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Sensor_List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData > sensor_list_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Sensor_History_SensorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData) */ {
 public:
  S2App_Sensor_History_SensorData();
  virtual ~S2App_Sensor_History_SensorData();

  S2App_Sensor_History_SensorData(const S2App_Sensor_History_SensorData& from);

  inline S2App_Sensor_History_SensorData& operator=(const S2App_Sensor_History_SensorData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Sensor_History_SensorData& default_instance();

  static inline const S2App_Sensor_History_SensorData* internal_default_instance() {
    return reinterpret_cast<const S2App_Sensor_History_SensorData*>(
               &_S2App_Sensor_History_SensorData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(S2App_Sensor_History_SensorData* other);

  // implements Message ----------------------------------------------

  inline S2App_Sensor_History_SensorData* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Sensor_History_SensorData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Sensor_History_SensorData& from);
  void MergeFrom(const S2App_Sensor_History_SensorData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Sensor_History_SensorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double min_value1 = 1;
  bool has_min_value1() const;
  void clear_min_value1();
  static const int kMinValue1FieldNumber = 1;
  double min_value1() const;
  void set_min_value1(double value);

  // required double min_value2 = 2;
  bool has_min_value2() const;
  void clear_min_value2();
  static const int kMinValue2FieldNumber = 2;
  double min_value2() const;
  void set_min_value2(double value);

  // required double min_value3 = 3;
  bool has_min_value3() const;
  void clear_min_value3();
  static const int kMinValue3FieldNumber = 3;
  double min_value3() const;
  void set_min_value3(double value);

  // required double max_value1 = 4;
  bool has_max_value1() const;
  void clear_max_value1();
  static const int kMaxValue1FieldNumber = 4;
  double max_value1() const;
  void set_max_value1(double value);

  // required double max_value2 = 5;
  bool has_max_value2() const;
  void clear_max_value2();
  static const int kMaxValue2FieldNumber = 5;
  double max_value2() const;
  void set_max_value2(double value);

  // required double max_value3 = 6;
  bool has_max_value3() const;
  void clear_max_value3();
  static const int kMaxValue3FieldNumber = 6;
  double max_value3() const;
  void set_max_value3(double value);

  // required double min_offset_value1 = 7;
  bool has_min_offset_value1() const;
  void clear_min_offset_value1();
  static const int kMinOffsetValue1FieldNumber = 7;
  double min_offset_value1() const;
  void set_min_offset_value1(double value);

  // required double min_offset_value2 = 8;
  bool has_min_offset_value2() const;
  void clear_min_offset_value2();
  static const int kMinOffsetValue2FieldNumber = 8;
  double min_offset_value2() const;
  void set_min_offset_value2(double value);

  // required double min_offset_value3 = 9;
  bool has_min_offset_value3() const;
  void clear_min_offset_value3();
  static const int kMinOffsetValue3FieldNumber = 9;
  double min_offset_value3() const;
  void set_min_offset_value3(double value);

  // required double max_offset_value1 = 10;
  bool has_max_offset_value1() const;
  void clear_max_offset_value1();
  static const int kMaxOffsetValue1FieldNumber = 10;
  double max_offset_value1() const;
  void set_max_offset_value1(double value);

  // required double max_offset_value2 = 11;
  bool has_max_offset_value2() const;
  void clear_max_offset_value2();
  static const int kMaxOffsetValue2FieldNumber = 11;
  double max_offset_value2() const;
  void set_max_offset_value2(double value);

  // required double max_offset_value3 = 12;
  bool has_max_offset_value3() const;
  void clear_max_offset_value3();
  static const int kMaxOffsetValue3FieldNumber = 12;
  double max_offset_value3() const;
  void set_max_offset_value3(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
 private:
  void set_has_min_value1();
  void clear_has_min_value1();
  void set_has_min_value2();
  void clear_has_min_value2();
  void set_has_min_value3();
  void clear_has_min_value3();
  void set_has_max_value1();
  void clear_has_max_value1();
  void set_has_max_value2();
  void clear_has_max_value2();
  void set_has_max_value3();
  void clear_has_max_value3();
  void set_has_min_offset_value1();
  void clear_has_min_offset_value1();
  void set_has_min_offset_value2();
  void clear_has_min_offset_value2();
  void set_has_min_offset_value3();
  void clear_has_min_offset_value3();
  void set_has_max_offset_value1();
  void clear_has_max_offset_value1();
  void set_has_max_offset_value2();
  void clear_has_max_offset_value2();
  void set_has_max_offset_value3();
  void clear_has_max_offset_value3();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double min_value1_;
  double min_value2_;
  double min_value3_;
  double max_value1_;
  double max_value2_;
  double max_value3_;
  double min_offset_value1_;
  double min_offset_value2_;
  double min_offset_value3_;
  double max_offset_value1_;
  double max_offset_value2_;
  double max_offset_value3_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2App_Sensor_History : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2App_Sensor_History) */ {
 public:
  S2App_Sensor_History();
  virtual ~S2App_Sensor_History();

  S2App_Sensor_History(const S2App_Sensor_History& from);

  inline S2App_Sensor_History& operator=(const S2App_Sensor_History& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2App_Sensor_History& default_instance();

  static inline const S2App_Sensor_History* internal_default_instance() {
    return reinterpret_cast<const S2App_Sensor_History*>(
               &_S2App_Sensor_History_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(S2App_Sensor_History* other);

  // implements Message ----------------------------------------------

  inline S2App_Sensor_History* New() const PROTOBUF_FINAL { return New(NULL); }

  S2App_Sensor_History* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2App_Sensor_History& from);
  void MergeFrom(const S2App_Sensor_History& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2App_Sensor_History* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef S2App_Sensor_History_SensorData SensorData;

  // accessors -------------------------------------------------------

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 10;
  int history_list_size() const;
  void clear_history_list();
  static const int kHistoryListFieldNumber = 10;
  const ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData& history_list(int index) const;
  ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* mutable_history_list(int index);
  ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* add_history_list();
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >*
      mutable_history_list();
  const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >&
      history_list() const;

  // required double longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 begin_time = 4;
  bool has_begin_time() const;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 4;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // required double latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 end_time = 5;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // required uint32 invterval = 6;
  bool has_invterval() const;
  void clear_invterval();
  static const int kInvtervalFieldNumber = 6;
  ::google::protobuf::uint32 invterval() const;
  void set_invterval(::google::protobuf::uint32 value);

  // required double avg_value1 = 7;
  bool has_avg_value1() const;
  void clear_avg_value1();
  static const int kAvgValue1FieldNumber = 7;
  double avg_value1() const;
  void set_avg_value1(double value);

  // required double avg_value2 = 8;
  bool has_avg_value2() const;
  void clear_avg_value2();
  static const int kAvgValue2FieldNumber = 8;
  double avg_value2() const;
  void set_avg_value2(double value);

  // required double avg_value3 = 9;
  bool has_avg_value3() const;
  void clear_avg_value3();
  static const int kAvgValue3FieldNumber = 9;
  double avg_value3() const;
  void set_avg_value3(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2App_Sensor_History)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_begin_time();
  void clear_has_begin_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_invterval();
  void clear_has_invterval();
  void set_has_avg_value1();
  void clear_has_avg_value1();
  void set_has_avg_value2();
  void clear_has_avg_value2();
  void set_has_avg_value3();
  void clear_has_avg_value3();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData > history_list_;
  double longitude_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 begin_time_;
  double latitude_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 invterval_;
  double avg_value1_;
  double avg_value2_;
  double avg_value3_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_ERROR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_ERROR) */ {
 public:
  S2APP_ERROR();
  virtual ~S2APP_ERROR();

  S2APP_ERROR(const S2APP_ERROR& from);

  inline S2APP_ERROR& operator=(const S2APP_ERROR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_ERROR& default_instance();

  static inline const S2APP_ERROR* internal_default_instance() {
    return reinterpret_cast<const S2APP_ERROR*>(
               &_S2APP_ERROR_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(S2APP_ERROR* other);

  // implements Message ----------------------------------------------

  inline S2APP_ERROR* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_ERROR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_ERROR& from);
  void MergeFrom(const S2APP_ERROR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_ERROR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::uint32 error_code() const;
  void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_ERROR)
 private:
  void set_has_error_code();
  void clear_has_error_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 error_code_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_New_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_New_Slope) */ {
 public:
  S2APP_New_Slope();
  virtual ~S2APP_New_Slope();

  S2APP_New_Slope(const S2APP_New_Slope& from);

  inline S2APP_New_Slope& operator=(const S2APP_New_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_New_Slope& default_instance();

  static inline const S2APP_New_Slope* internal_default_instance() {
    return reinterpret_cast<const S2APP_New_Slope*>(
               &_S2APP_New_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(S2APP_New_Slope* other);

  // implements Message ----------------------------------------------

  inline S2APP_New_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_New_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_New_Slope& from);
  void MergeFrom(const S2APP_New_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_New_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_New_Slope)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_state();
  void clear_has_state();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 state_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Del_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Del_Slope) */ {
 public:
  S2APP_Del_Slope();
  virtual ~S2APP_Del_Slope();

  S2APP_Del_Slope(const S2APP_Del_Slope& from);

  inline S2APP_Del_Slope& operator=(const S2APP_Del_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Del_Slope& default_instance();

  static inline const S2APP_Del_Slope* internal_default_instance() {
    return reinterpret_cast<const S2APP_Del_Slope*>(
               &_S2APP_Del_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(S2APP_Del_Slope* other);

  // implements Message ----------------------------------------------

  inline S2APP_Del_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Del_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Del_Slope& from);
  void MergeFrom(const S2APP_Del_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Del_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Del_Slope)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Update_Slope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Update_Slope) */ {
 public:
  S2APP_Update_Slope();
  virtual ~S2APP_Update_Slope();

  S2APP_Update_Slope(const S2APP_Update_Slope& from);

  inline S2APP_Update_Slope& operator=(const S2APP_Update_Slope& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Update_Slope& default_instance();

  static inline const S2APP_Update_Slope* internal_default_instance() {
    return reinterpret_cast<const S2APP_Update_Slope*>(
               &_S2APP_Update_Slope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(S2APP_Update_Slope* other);

  // implements Message ----------------------------------------------

  inline S2APP_Update_Slope* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Update_Slope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Update_Slope& from);
  void MergeFrom(const S2APP_Update_Slope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Update_Slope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required bytes url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // required uint32 state = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Update_Slope)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_state();
  void clear_has_state();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  double longitude_;
  double latitude_;
  ::google::protobuf::uint32 state_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Add_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Add_Sensor) */ {
 public:
  S2APP_Add_Sensor();
  virtual ~S2APP_Add_Sensor();

  S2APP_Add_Sensor(const S2APP_Add_Sensor& from);

  inline S2APP_Add_Sensor& operator=(const S2APP_Add_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Add_Sensor& default_instance();

  static inline const S2APP_Add_Sensor* internal_default_instance() {
    return reinterpret_cast<const S2APP_Add_Sensor*>(
               &_S2APP_Add_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(S2APP_Add_Sensor* other);

  // implements Message ----------------------------------------------

  inline S2APP_Add_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Add_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Add_Sensor& from);
  void MergeFrom(const S2APP_Add_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Add_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required bytes description = 8;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // required uint32 slope_id = 4;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 4;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Add_Sensor)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_state();
  void clear_has_state();
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();
  void set_has_description();
  void clear_has_description();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 slope_id_;
  double longitude_;
  double latitude_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Del_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Del_Sensor) */ {
 public:
  S2APP_Del_Sensor();
  virtual ~S2APP_Del_Sensor();

  S2APP_Del_Sensor(const S2APP_Del_Sensor& from);

  inline S2APP_Del_Sensor& operator=(const S2APP_Del_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Del_Sensor& default_instance();

  static inline const S2APP_Del_Sensor* internal_default_instance() {
    return reinterpret_cast<const S2APP_Del_Sensor*>(
               &_S2APP_Del_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(S2APP_Del_Sensor* other);

  // implements Message ----------------------------------------------

  inline S2APP_Del_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Del_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Del_Sensor& from);
  void MergeFrom(const S2APP_Del_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Del_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Del_Sensor)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Update_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Update_Sensor) */ {
 public:
  S2APP_Update_Sensor();
  virtual ~S2APP_Update_Sensor();

  S2APP_Update_Sensor(const S2APP_Update_Sensor& from);

  inline S2APP_Update_Sensor& operator=(const S2APP_Update_Sensor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Update_Sensor& default_instance();

  static inline const S2APP_Update_Sensor* internal_default_instance() {
    return reinterpret_cast<const S2APP_Update_Sensor*>(
               &_S2APP_Update_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(S2APP_Update_Sensor* other);

  // implements Message ----------------------------------------------

  inline S2APP_Update_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Update_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Update_Sensor& from);
  void MergeFrom(const S2APP_Update_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Update_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const void* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required bytes description = 8;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 8;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const void* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // required uint32 slope_id = 4;
  bool has_slope_id() const;
  void clear_slope_id();
  static const int kSlopeIdFieldNumber = 4;
  ::google::protobuf::uint32 slope_id() const;
  void set_slope_id(::google::protobuf::uint32 value);

  // required double longitude = 5;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 5;
  double longitude() const;
  void set_longitude(double value);

  // required double latitude = 6;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 6;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Update_Sensor)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_state();
  void clear_has_state();
  void set_has_slope_id();
  void clear_has_slope_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_url();
  void clear_has_url();
  void set_has_description();
  void clear_has_description();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 slope_id_;
  double longitude_;
  double latitude_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2APP_Modify_Password_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:APP_SERVER_NET_Protocol.S2APP_Modify_Password_Result) */ {
 public:
  S2APP_Modify_Password_Result();
  virtual ~S2APP_Modify_Password_Result();

  S2APP_Modify_Password_Result(const S2APP_Modify_Password_Result& from);

  inline S2APP_Modify_Password_Result& operator=(const S2APP_Modify_Password_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2APP_Modify_Password_Result& default_instance();

  static inline const S2APP_Modify_Password_Result* internal_default_instance() {
    return reinterpret_cast<const S2APP_Modify_Password_Result*>(
               &_S2APP_Modify_Password_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(S2APP_Modify_Password_Result* other);

  // implements Message ----------------------------------------------

  inline S2APP_Modify_Password_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  S2APP_Modify_Password_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2APP_Modify_Password_Result& from);
  void MergeFrom(const S2APP_Modify_Password_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2APP_Modify_Password_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:APP_SERVER_NET_Protocol.S2APP_Modify_Password_Result)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_App_5fServer_5fProtocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// App2S_Login

// required bytes account = 1;
inline bool App2S_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void App2S_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void App2S_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void App2S_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& App2S_Login::account() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.App2S_Login.account)
  return account_.GetNoArena();
}
inline void App2S_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.App2S_Login.account)
}
#if LANG_CXX11
inline void App2S_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.App2S_Login.account)
}
#endif
inline void App2S_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.App2S_Login.account)
}
inline void App2S_Login::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.App2S_Login.account)
}
inline ::std::string* App2S_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.App2S_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* App2S_Login::release_account() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.App2S_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void App2S_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.App2S_Login.account)
}

// required bytes password = 2;
inline bool App2S_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void App2S_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void App2S_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void App2S_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& App2S_Login::password() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.App2S_Login.password)
  return password_.GetNoArena();
}
inline void App2S_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.App2S_Login.password)
}
#if LANG_CXX11
inline void App2S_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.App2S_Login.password)
}
#endif
inline void App2S_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.App2S_Login.password)
}
inline void App2S_Login::set_password(const void* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.App2S_Login.password)
}
inline ::std::string* App2S_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.App2S_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* App2S_Login::release_password() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.App2S_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void App2S_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.App2S_Login.password)
}

// -------------------------------------------------------------------

// APP2S_Request_Slope_List

// required uint32 server_id = 1;
inline bool APP2S_Request_Slope_List::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Request_Slope_List::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Request_Slope_List::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Request_Slope_List::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 APP2S_Request_Slope_List::server_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List.server_id)
  return server_id_;
}
inline void APP2S_Request_Slope_List::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List.server_id)
}

// -------------------------------------------------------------------

// APP2S_Request_Sensor_List

// required uint32 slope_id = 1;
inline bool APP2S_Request_Sensor_List::has_slope_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Request_Sensor_List::set_has_slope_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Request_Sensor_List::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Request_Sensor_List::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 APP2S_Request_Sensor_List::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.slope_id)
  return slope_id_;
}
inline void APP2S_Request_Sensor_List::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.slope_id)
}

// required uint32 sensor_type = 2;
inline bool APP2S_Request_Sensor_List::has_sensor_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Request_Sensor_List::set_has_sensor_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Request_Sensor_List::clear_has_sensor_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Request_Sensor_List::clear_sensor_type() {
  sensor_type_ = 0u;
  clear_has_sensor_type();
}
inline ::google::protobuf::uint32 APP2S_Request_Sensor_List::sensor_type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.sensor_type)
  return sensor_type_;
}
inline void APP2S_Request_Sensor_List::set_sensor_type(::google::protobuf::uint32 value) {
  set_has_sensor_type();
  sensor_type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.sensor_type)
}

// -------------------------------------------------------------------

// APP2S_Request_Sensor_History

// required uint32 sensor_id = 1;
inline bool APP2S_Request_Sensor_History::has_sensor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Request_Sensor_History::set_has_sensor_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Request_Sensor_History::clear_has_sensor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Request_Sensor_History::clear_sensor_id() {
  sensor_id_ = 0u;
  clear_has_sensor_id();
}
inline ::google::protobuf::uint32 APP2S_Request_Sensor_History::sensor_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.sensor_id)
  return sensor_id_;
}
inline void APP2S_Request_Sensor_History::set_sensor_id(::google::protobuf::uint32 value) {
  set_has_sensor_id();
  sensor_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.sensor_id)
}

// required uint32 begin_time = 2;
inline bool APP2S_Request_Sensor_History::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Request_Sensor_History::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Request_Sensor_History::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Request_Sensor_History::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 APP2S_Request_Sensor_History::begin_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.begin_time)
  return begin_time_;
}
inline void APP2S_Request_Sensor_History::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.begin_time)
}

// required uint32 end_time = 3;
inline bool APP2S_Request_Sensor_History::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Request_Sensor_History::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Request_Sensor_History::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Request_Sensor_History::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 APP2S_Request_Sensor_History::end_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.end_time)
  return end_time_;
}
inline void APP2S_Request_Sensor_History::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.end_time)
}

// -------------------------------------------------------------------

// APP2S_Add_Slope

// required uint32 type = 1;
inline bool APP2S_Add_Slope::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void APP2S_Add_Slope::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void APP2S_Add_Slope::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void APP2S_Add_Slope::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 APP2S_Add_Slope::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Slope.type)
  return type_;
}
inline void APP2S_Add_Slope::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Slope.type)
}

// required bytes name = 2;
inline bool APP2S_Add_Slope::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Add_Slope::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Add_Slope::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Add_Slope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& APP2S_Add_Slope::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
  return name_.GetNoArena();
}
inline void APP2S_Add_Slope::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
}
#if LANG_CXX11
inline void APP2S_Add_Slope::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
}
#endif
inline void APP2S_Add_Slope::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
}
inline void APP2S_Add_Slope::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
}
inline ::std::string* APP2S_Add_Slope::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Add_Slope::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Add_Slope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Add_Slope.name)
}

// required double longitude = 3;
inline bool APP2S_Add_Slope::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Add_Slope::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Add_Slope::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Add_Slope::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double APP2S_Add_Slope::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Slope.longitude)
  return longitude_;
}
inline void APP2S_Add_Slope::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Slope.longitude)
}

// required double latitude = 4;
inline bool APP2S_Add_Slope::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void APP2S_Add_Slope::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void APP2S_Add_Slope::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void APP2S_Add_Slope::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double APP2S_Add_Slope::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Slope.latitude)
  return latitude_;
}
inline void APP2S_Add_Slope::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Slope.latitude)
}

// required bytes url = 5;
inline bool APP2S_Add_Slope::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Add_Slope::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Add_Slope::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Add_Slope::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& APP2S_Add_Slope::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
  return url_.GetNoArena();
}
inline void APP2S_Add_Slope::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
}
#if LANG_CXX11
inline void APP2S_Add_Slope::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
}
#endif
inline void APP2S_Add_Slope::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
}
inline void APP2S_Add_Slope::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
}
inline ::std::string* APP2S_Add_Slope::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Add_Slope::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Add_Slope::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Add_Slope.url)
}

// -------------------------------------------------------------------

// APP2S_Del_Slope

// required uint32 id = 1;
inline bool APP2S_Del_Slope::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Del_Slope::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Del_Slope::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Del_Slope::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 APP2S_Del_Slope::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Del_Slope.id)
  return id_;
}
inline void APP2S_Del_Slope::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Del_Slope.id)
}

// -------------------------------------------------------------------

// APP2S_Update_Slope_Data

// required uint32 id = 1;
inline bool APP2S_Update_Slope_Data::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Update_Slope_Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Update_Slope_Data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 APP2S_Update_Slope_Data::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.id)
  return id_;
}
inline void APP2S_Update_Slope_Data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.id)
}

// required uint32 type = 2;
inline bool APP2S_Update_Slope_Data::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void APP2S_Update_Slope_Data::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void APP2S_Update_Slope_Data::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 APP2S_Update_Slope_Data::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.type)
  return type_;
}
inline void APP2S_Update_Slope_Data::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.type)
}

// required bytes name = 3;
inline bool APP2S_Update_Slope_Data::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Update_Slope_Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Update_Slope_Data::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& APP2S_Update_Slope_Data::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
  return name_.GetNoArena();
}
inline void APP2S_Update_Slope_Data::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
}
#if LANG_CXX11
inline void APP2S_Update_Slope_Data::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
}
#endif
inline void APP2S_Update_Slope_Data::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
}
inline void APP2S_Update_Slope_Data::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
}
inline ::std::string* APP2S_Update_Slope_Data::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Update_Slope_Data::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Update_Slope_Data::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.name)
}

// required double longitude = 4;
inline bool APP2S_Update_Slope_Data::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void APP2S_Update_Slope_Data::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void APP2S_Update_Slope_Data::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double APP2S_Update_Slope_Data::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.longitude)
  return longitude_;
}
inline void APP2S_Update_Slope_Data::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.longitude)
}

// required double latitude = 5;
inline bool APP2S_Update_Slope_Data::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void APP2S_Update_Slope_Data::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void APP2S_Update_Slope_Data::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double APP2S_Update_Slope_Data::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.latitude)
  return latitude_;
}
inline void APP2S_Update_Slope_Data::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.latitude)
}

// required bytes url = 6;
inline bool APP2S_Update_Slope_Data::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Update_Slope_Data::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Update_Slope_Data::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Update_Slope_Data::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& APP2S_Update_Slope_Data::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
  return url_.GetNoArena();
}
inline void APP2S_Update_Slope_Data::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
}
#if LANG_CXX11
inline void APP2S_Update_Slope_Data::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
}
#endif
inline void APP2S_Update_Slope_Data::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
}
inline void APP2S_Update_Slope_Data::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
}
inline ::std::string* APP2S_Update_Slope_Data::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Update_Slope_Data::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Update_Slope_Data::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Update_Slope_Data.url)
}

// -------------------------------------------------------------------

// APP2S_Add_Sensor

// required uint32 type = 1;
inline bool APP2S_Add_Sensor::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Add_Sensor::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Add_Sensor::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Add_Sensor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 APP2S_Add_Sensor::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.type)
  return type_;
}
inline void APP2S_Add_Sensor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.type)
}

// required uint32 slope_id = 2;
inline bool APP2S_Add_Sensor::has_slope_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void APP2S_Add_Sensor::set_has_slope_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void APP2S_Add_Sensor::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void APP2S_Add_Sensor::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 APP2S_Add_Sensor::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.slope_id)
  return slope_id_;
}
inline void APP2S_Add_Sensor::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.slope_id)
}

// required double longitude = 3;
inline bool APP2S_Add_Sensor::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void APP2S_Add_Sensor::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void APP2S_Add_Sensor::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void APP2S_Add_Sensor::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double APP2S_Add_Sensor::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.longitude)
  return longitude_;
}
inline void APP2S_Add_Sensor::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.longitude)
}

// required double latitude = 4;
inline bool APP2S_Add_Sensor::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void APP2S_Add_Sensor::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void APP2S_Add_Sensor::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void APP2S_Add_Sensor::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double APP2S_Add_Sensor::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.latitude)
  return latitude_;
}
inline void APP2S_Add_Sensor::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.latitude)
}

// required bytes url = 5;
inline bool APP2S_Add_Sensor::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Add_Sensor::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Add_Sensor::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Add_Sensor::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& APP2S_Add_Sensor::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
  return url_.GetNoArena();
}
inline void APP2S_Add_Sensor::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
}
#if LANG_CXX11
inline void APP2S_Add_Sensor::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
}
#endif
inline void APP2S_Add_Sensor::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
}
inline void APP2S_Add_Sensor::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
}
inline ::std::string* APP2S_Add_Sensor::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Add_Sensor::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Add_Sensor::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.url)
}

// required bytes description = 6;
inline bool APP2S_Add_Sensor::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Add_Sensor::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Add_Sensor::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Add_Sensor::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& APP2S_Add_Sensor::description() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
  return description_.GetNoArena();
}
inline void APP2S_Add_Sensor::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
}
#if LANG_CXX11
inline void APP2S_Add_Sensor::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
}
#endif
inline void APP2S_Add_Sensor::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
}
inline void APP2S_Add_Sensor::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
}
inline ::std::string* APP2S_Add_Sensor::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Add_Sensor::release_description() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Add_Sensor::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Add_Sensor.description)
}

// -------------------------------------------------------------------

// APP2S_Del_Sensor

// required uint32 id = 1;
inline bool APP2S_Del_Sensor::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Del_Sensor::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Del_Sensor::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Del_Sensor::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 APP2S_Del_Sensor::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Del_Sensor.id)
  return id_;
}
inline void APP2S_Del_Sensor::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Del_Sensor.id)
}

// -------------------------------------------------------------------

// APP2S_Update_Sensor_Data

// required uint32 id = 1;
inline bool APP2S_Update_Sensor_Data::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Update_Sensor_Data::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Update_Sensor_Data::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 APP2S_Update_Sensor_Data::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.id)
  return id_;
}
inline void APP2S_Update_Sensor_Data::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.id)
}

// required uint32 type = 2;
inline bool APP2S_Update_Sensor_Data::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void APP2S_Update_Sensor_Data::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void APP2S_Update_Sensor_Data::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 APP2S_Update_Sensor_Data::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.type)
  return type_;
}
inline void APP2S_Update_Sensor_Data::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.type)
}

// required uint32 slope_id = 3;
inline bool APP2S_Update_Sensor_Data::has_slope_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_slope_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void APP2S_Update_Sensor_Data::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void APP2S_Update_Sensor_Data::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 APP2S_Update_Sensor_Data::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.slope_id)
  return slope_id_;
}
inline void APP2S_Update_Sensor_Data::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.slope_id)
}

// required double longitude = 4;
inline bool APP2S_Update_Sensor_Data::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void APP2S_Update_Sensor_Data::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void APP2S_Update_Sensor_Data::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double APP2S_Update_Sensor_Data::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.longitude)
  return longitude_;
}
inline void APP2S_Update_Sensor_Data::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.longitude)
}

// required double latitude = 5;
inline bool APP2S_Update_Sensor_Data::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void APP2S_Update_Sensor_Data::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void APP2S_Update_Sensor_Data::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double APP2S_Update_Sensor_Data::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.latitude)
  return latitude_;
}
inline void APP2S_Update_Sensor_Data::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.latitude)
}

// required bytes url = 6;
inline bool APP2S_Update_Sensor_Data::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Update_Sensor_Data::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Update_Sensor_Data::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& APP2S_Update_Sensor_Data::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
  return url_.GetNoArena();
}
inline void APP2S_Update_Sensor_Data::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
}
#if LANG_CXX11
inline void APP2S_Update_Sensor_Data::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
}
#endif
inline void APP2S_Update_Sensor_Data::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
}
inline void APP2S_Update_Sensor_Data::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
}
inline ::std::string* APP2S_Update_Sensor_Data::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Update_Sensor_Data::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Update_Sensor_Data::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.url)
}

// required bytes description = 7;
inline bool APP2S_Update_Sensor_Data::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Update_Sensor_Data::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Update_Sensor_Data::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Update_Sensor_Data::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& APP2S_Update_Sensor_Data::description() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
  return description_.GetNoArena();
}
inline void APP2S_Update_Sensor_Data::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
}
#if LANG_CXX11
inline void APP2S_Update_Sensor_Data::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
}
#endif
inline void APP2S_Update_Sensor_Data::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
}
inline void APP2S_Update_Sensor_Data::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
}
inline ::std::string* APP2S_Update_Sensor_Data::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Update_Sensor_Data::release_description() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Update_Sensor_Data::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Update_Sensor_Data.description)
}

// -------------------------------------------------------------------

// APP2S_Modify_Password

// required bytes account = 1;
inline bool APP2S_Modify_Password::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Modify_Password::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Modify_Password::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Modify_Password::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& APP2S_Modify_Password::account() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
  return account_.GetNoArena();
}
inline void APP2S_Modify_Password::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
}
#if LANG_CXX11
inline void APP2S_Modify_Password::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
}
#endif
inline void APP2S_Modify_Password::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
}
inline void APP2S_Modify_Password::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
}
inline ::std::string* APP2S_Modify_Password::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Modify_Password::release_account() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Modify_Password::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Modify_Password.account)
}

// required bytes new_password = 2;
inline bool APP2S_Modify_Password::has_new_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Modify_Password::set_has_new_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Modify_Password::clear_has_new_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Modify_Password::clear_new_password() {
  new_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_new_password();
}
inline const ::std::string& APP2S_Modify_Password::new_password() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
  return new_password_.GetNoArena();
}
inline void APP2S_Modify_Password::set_new_password(const ::std::string& value) {
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
}
#if LANG_CXX11
inline void APP2S_Modify_Password::set_new_password(::std::string&& value) {
  set_has_new_password();
  new_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
}
#endif
inline void APP2S_Modify_Password::set_new_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
}
inline void APP2S_Modify_Password::set_new_password(const void* value, size_t size) {
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
}
inline ::std::string* APP2S_Modify_Password::mutable_new_password() {
  set_has_new_password();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
  return new_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Modify_Password::release_new_password() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
  clear_has_new_password();
  return new_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Modify_Password::set_allocated_new_password(::std::string* new_password) {
  if (new_password != NULL) {
    set_has_new_password();
  } else {
    clear_has_new_password();
  }
  new_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_password);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Modify_Password.new_password)
}

// -------------------------------------------------------------------

// APP2S_Find_Slope

// required uint32 slope_id = 1;
inline bool APP2S_Find_Slope::has_slope_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Find_Slope::set_has_slope_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Find_Slope::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Find_Slope::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 APP2S_Find_Slope::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_id)
  return slope_id_;
}
inline void APP2S_Find_Slope::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_id)
}

// required bytes slope_name = 2;
inline bool APP2S_Find_Slope::has_slope_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Find_Slope::set_has_slope_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Find_Slope::clear_has_slope_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Find_Slope::clear_slope_name() {
  slope_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_slope_name();
}
inline const ::std::string& APP2S_Find_Slope::slope_name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
  return slope_name_.GetNoArena();
}
inline void APP2S_Find_Slope::set_slope_name(const ::std::string& value) {
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
}
#if LANG_CXX11
inline void APP2S_Find_Slope::set_slope_name(::std::string&& value) {
  set_has_slope_name();
  slope_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
}
#endif
inline void APP2S_Find_Slope::set_slope_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
}
inline void APP2S_Find_Slope::set_slope_name(const void* value, size_t size) {
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
}
inline ::std::string* APP2S_Find_Slope::mutable_slope_name() {
  set_has_slope_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
  return slope_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Find_Slope::release_slope_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
  clear_has_slope_name();
  return slope_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Find_Slope::set_allocated_slope_name(::std::string* slope_name) {
  if (slope_name != NULL) {
    set_has_slope_name();
  } else {
    clear_has_slope_name();
  }
  slope_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slope_name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Find_Slope.slope_name)
}

// -------------------------------------------------------------------

// APP2S_Find_Sensor

// required uint32 slope_id = 1;
inline bool APP2S_Find_Sensor::has_slope_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void APP2S_Find_Sensor::set_has_slope_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void APP2S_Find_Sensor::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void APP2S_Find_Sensor::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 APP2S_Find_Sensor::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_id)
  return slope_id_;
}
inline void APP2S_Find_Sensor::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_id)
}

// required bytes slope_name = 2;
inline bool APP2S_Find_Sensor::has_slope_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void APP2S_Find_Sensor::set_has_slope_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void APP2S_Find_Sensor::clear_has_slope_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void APP2S_Find_Sensor::clear_slope_name() {
  slope_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_slope_name();
}
inline const ::std::string& APP2S_Find_Sensor::slope_name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
  return slope_name_.GetNoArena();
}
inline void APP2S_Find_Sensor::set_slope_name(const ::std::string& value) {
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
}
#if LANG_CXX11
inline void APP2S_Find_Sensor::set_slope_name(::std::string&& value) {
  set_has_slope_name();
  slope_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
}
#endif
inline void APP2S_Find_Sensor::set_slope_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
}
inline void APP2S_Find_Sensor::set_slope_name(const void* value, size_t size) {
  set_has_slope_name();
  slope_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
}
inline ::std::string* APP2S_Find_Sensor::mutable_slope_name() {
  set_has_slope_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
  return slope_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* APP2S_Find_Sensor::release_slope_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
  clear_has_slope_name();
  return slope_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void APP2S_Find_Sensor::set_allocated_slope_name(::std::string* slope_name) {
  if (slope_name != NULL) {
    set_has_slope_name();
  } else {
    clear_has_slope_name();
  }
  slope_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slope_name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.slope_name)
}

// required uint32 sensor_id = 3;
inline bool APP2S_Find_Sensor::has_sensor_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void APP2S_Find_Sensor::set_has_sensor_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void APP2S_Find_Sensor::clear_has_sensor_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void APP2S_Find_Sensor::clear_sensor_id() {
  sensor_id_ = 0u;
  clear_has_sensor_id();
}
inline ::google::protobuf::uint32 APP2S_Find_Sensor::sensor_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.sensor_id)
  return sensor_id_;
}
inline void APP2S_Find_Sensor::set_sensor_id(::google::protobuf::uint32 value) {
  set_has_sensor_id();
  sensor_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.sensor_id)
}

// required uint32 sensor_type = 4;
inline bool APP2S_Find_Sensor::has_sensor_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void APP2S_Find_Sensor::set_has_sensor_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void APP2S_Find_Sensor::clear_has_sensor_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void APP2S_Find_Sensor::clear_sensor_type() {
  sensor_type_ = 0u;
  clear_has_sensor_type();
}
inline ::google::protobuf::uint32 APP2S_Find_Sensor::sensor_type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.sensor_type)
  return sensor_type_;
}
inline void APP2S_Find_Sensor::set_sensor_type(::google::protobuf::uint32 value) {
  set_has_sensor_type();
  sensor_type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Find_Sensor.sensor_type)
}

// -------------------------------------------------------------------

// S2App_Login_Result_ServerData

// required uint32 id = 1;
inline bool S2App_Login_Result_ServerData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2App_Login_Result_ServerData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2App_Login_Result_ServerData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2App_Login_Result_ServerData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2App_Login_Result_ServerData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.id)
  return id_;
}
inline void S2App_Login_Result_ServerData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.id)
}

// required bytes ip = 2;
inline bool S2App_Login_Result_ServerData::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Login_Result_ServerData::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Login_Result_ServerData::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Login_Result_ServerData::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& S2App_Login_Result_ServerData::ip() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  return ip_.GetNoArena();
}
inline void S2App_Login_Result_ServerData::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
#if LANG_CXX11
inline void S2App_Login_Result_ServerData::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
#endif
inline void S2App_Login_Result_ServerData::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
inline void S2App_Login_Result_ServerData::set_ip(const void* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
inline ::std::string* S2App_Login_Result_ServerData::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2App_Login_Result_ServerData::release_ip() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2App_Login_Result_ServerData::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}

// required uint32 port = 3;
inline bool S2App_Login_Result_ServerData::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2App_Login_Result_ServerData::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2App_Login_Result_ServerData::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2App_Login_Result_ServerData::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 S2App_Login_Result_ServerData::port() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.port)
  return port_;
}
inline void S2App_Login_Result_ServerData::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.port)
}

// -------------------------------------------------------------------

// S2App_Login_Result

// required uint32 result = 1;
inline bool S2App_Login_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Login_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Login_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Login_Result::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 S2App_Login_Result::result() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.result)
  return result_;
}
inline void S2App_Login_Result::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.result)
}

// repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
inline int S2App_Login_Result::server_list_size() const {
  return server_list_.size();
}
inline void S2App_Login_Result::clear_server_list() {
  server_list_.Clear();
}
inline const ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData& S2App_Login_Result::server_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Get(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* S2App_Login_Result::mutable_server_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Mutable(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* S2App_Login_Result::add_server_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >*
S2App_Login_Result::mutable_server_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return &server_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >&
S2App_Login_Result::server_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_;
}

// -------------------------------------------------------------------

// S2App_Slope_List_SlopeData

// required uint32 id = 1;
inline bool S2App_Slope_List_SlopeData::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2App_Slope_List_SlopeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2App_Slope_List_SlopeData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2App_Slope_List_SlopeData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.id)
  return id_;
}
inline void S2App_Slope_List_SlopeData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.id)
}

// required uint32 type = 2;
inline bool S2App_Slope_List_SlopeData::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2App_Slope_List_SlopeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2App_Slope_List_SlopeData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2App_Slope_List_SlopeData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.type)
  return type_;
}
inline void S2App_Slope_List_SlopeData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.type)
}

// required bytes name = 3;
inline bool S2App_Slope_List_SlopeData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Slope_List_SlopeData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Slope_List_SlopeData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& S2App_Slope_List_SlopeData::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  return name_.GetNoArena();
}
inline void S2App_Slope_List_SlopeData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
#if LANG_CXX11
inline void S2App_Slope_List_SlopeData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
#endif
inline void S2App_Slope_List_SlopeData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
inline void S2App_Slope_List_SlopeData::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
inline ::std::string* S2App_Slope_List_SlopeData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2App_Slope_List_SlopeData::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2App_Slope_List_SlopeData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}

// required uint32 state = 4;
inline bool S2App_Slope_List_SlopeData::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2App_Slope_List_SlopeData::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2App_Slope_List_SlopeData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2App_Slope_List_SlopeData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.state)
  return state_;
}
inline void S2App_Slope_List_SlopeData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.state)
}

// required double longitude = 5;
inline bool S2App_Slope_List_SlopeData::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2App_Slope_List_SlopeData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2App_Slope_List_SlopeData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2App_Slope_List_SlopeData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.longitude)
  return longitude_;
}
inline void S2App_Slope_List_SlopeData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.longitude)
}

// required double latitude = 6;
inline bool S2App_Slope_List_SlopeData::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2App_Slope_List_SlopeData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2App_Slope_List_SlopeData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2App_Slope_List_SlopeData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.latitude)
  return latitude_;
}
inline void S2App_Slope_List_SlopeData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.latitude)
}

// optional bytes url = 7;
inline bool S2App_Slope_List_SlopeData::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2App_Slope_List_SlopeData::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2App_Slope_List_SlopeData::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2App_Slope_List_SlopeData::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2App_Slope_List_SlopeData::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
  return url_.GetNoArena();
}
inline void S2App_Slope_List_SlopeData::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
}
#if LANG_CXX11
inline void S2App_Slope_List_SlopeData::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
}
#endif
inline void S2App_Slope_List_SlopeData::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
}
inline void S2App_Slope_List_SlopeData::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
}
inline ::std::string* S2App_Slope_List_SlopeData::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2App_Slope_List_SlopeData::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2App_Slope_List_SlopeData::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.url)
}

// -------------------------------------------------------------------

// S2App_Slope_List

// repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
inline int S2App_Slope_List::slope_list_size() const {
  return slope_list_.size();
}
inline void S2App_Slope_List::clear_slope_list() {
  slope_list_.Clear();
}
inline const ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData& S2App_Slope_List::slope_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Get(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* S2App_Slope_List::mutable_slope_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Mutable(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* S2App_Slope_List::add_slope_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >*
S2App_Slope_List::mutable_slope_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return &slope_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >&
S2App_Slope_List::slope_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_;
}

// -------------------------------------------------------------------

// S2App_Sensor_List_SensorData

// required uint32 id = 1;
inline bool S2App_Sensor_List_SensorData::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2App_Sensor_List_SensorData::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2App_Sensor_List_SensorData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2App_Sensor_List_SensorData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.id)
  return id_;
}
inline void S2App_Sensor_List_SensorData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.id)
}

// required uint32 type = 2;
inline bool S2App_Sensor_List_SensorData::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2App_Sensor_List_SensorData::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2App_Sensor_List_SensorData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2App_Sensor_List_SensorData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.type)
  return type_;
}
inline void S2App_Sensor_List_SensorData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.type)
}

// required uint32 state = 3;
inline bool S2App_Sensor_List_SensorData::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2App_Sensor_List_SensorData::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2App_Sensor_List_SensorData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2App_Sensor_List_SensorData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.state)
  return state_;
}
inline void S2App_Sensor_List_SensorData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.state)
}

// required uint32 slope_id = 4;
inline bool S2App_Sensor_List_SensorData::has_slope_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_slope_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2App_Sensor_List_SensorData::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2App_Sensor_List_SensorData::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 S2App_Sensor_List_SensorData::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.slope_id)
  return slope_id_;
}
inline void S2App_Sensor_List_SensorData::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.slope_id)
}

// required double longitude = 5;
inline bool S2App_Sensor_List_SensorData::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2App_Sensor_List_SensorData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2App_Sensor_List_SensorData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2App_Sensor_List_SensorData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.longitude)
  return longitude_;
}
inline void S2App_Sensor_List_SensorData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.longitude)
}

// required double latitude = 6;
inline bool S2App_Sensor_List_SensorData::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2App_Sensor_List_SensorData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2App_Sensor_List_SensorData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2App_Sensor_List_SensorData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.latitude)
  return latitude_;
}
inline void S2App_Sensor_List_SensorData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.latitude)
}

// required double cur_value1 = 7;
inline bool S2App_Sensor_List_SensorData::has_cur_value1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_cur_value1() {
  _has_bits_[0] |= 0x00000100u;
}
inline void S2App_Sensor_List_SensorData::clear_has_cur_value1() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void S2App_Sensor_List_SensorData::clear_cur_value1() {
  cur_value1_ = 0;
  clear_has_cur_value1();
}
inline double S2App_Sensor_List_SensorData::cur_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value1)
  return cur_value1_;
}
inline void S2App_Sensor_List_SensorData::set_cur_value1(double value) {
  set_has_cur_value1();
  cur_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value1)
}

// required double cur_value2 = 8;
inline bool S2App_Sensor_List_SensorData::has_cur_value2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_cur_value2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void S2App_Sensor_List_SensorData::clear_has_cur_value2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void S2App_Sensor_List_SensorData::clear_cur_value2() {
  cur_value2_ = 0;
  clear_has_cur_value2();
}
inline double S2App_Sensor_List_SensorData::cur_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value2)
  return cur_value2_;
}
inline void S2App_Sensor_List_SensorData::set_cur_value2(double value) {
  set_has_cur_value2();
  cur_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value2)
}

// required double cur_value3 = 9;
inline bool S2App_Sensor_List_SensorData::has_cur_value3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_cur_value3() {
  _has_bits_[0] |= 0x00000400u;
}
inline void S2App_Sensor_List_SensorData::clear_has_cur_value3() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void S2App_Sensor_List_SensorData::clear_cur_value3() {
  cur_value3_ = 0;
  clear_has_cur_value3();
}
inline double S2App_Sensor_List_SensorData::cur_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value3)
  return cur_value3_;
}
inline void S2App_Sensor_List_SensorData::set_cur_value3(double value) {
  set_has_cur_value3();
  cur_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value3)
}

// required double avg_value1 = 10;
inline bool S2App_Sensor_List_SensorData::has_avg_value1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_avg_value1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void S2App_Sensor_List_SensorData::clear_has_avg_value1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void S2App_Sensor_List_SensorData::clear_avg_value1() {
  avg_value1_ = 0;
  clear_has_avg_value1();
}
inline double S2App_Sensor_List_SensorData::avg_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value1)
  return avg_value1_;
}
inline void S2App_Sensor_List_SensorData::set_avg_value1(double value) {
  set_has_avg_value1();
  avg_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value1)
}

// required double avg_value2 = 11;
inline bool S2App_Sensor_List_SensorData::has_avg_value2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_avg_value2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void S2App_Sensor_List_SensorData::clear_has_avg_value2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void S2App_Sensor_List_SensorData::clear_avg_value2() {
  avg_value2_ = 0;
  clear_has_avg_value2();
}
inline double S2App_Sensor_List_SensorData::avg_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value2)
  return avg_value2_;
}
inline void S2App_Sensor_List_SensorData::set_avg_value2(double value) {
  set_has_avg_value2();
  avg_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value2)
}

// required double avg_value3 = 12;
inline bool S2App_Sensor_List_SensorData::has_avg_value3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_avg_value3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void S2App_Sensor_List_SensorData::clear_has_avg_value3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void S2App_Sensor_List_SensorData::clear_avg_value3() {
  avg_value3_ = 0;
  clear_has_avg_value3();
}
inline double S2App_Sensor_List_SensorData::avg_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value3)
  return avg_value3_;
}
inline void S2App_Sensor_List_SensorData::set_avg_value3(double value) {
  set_has_avg_value3();
  avg_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.avg_value3)
}

// required double offset_value1 = 13;
inline bool S2App_Sensor_List_SensorData::has_offset_value1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_offset_value1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void S2App_Sensor_List_SensorData::clear_has_offset_value1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void S2App_Sensor_List_SensorData::clear_offset_value1() {
  offset_value1_ = 0;
  clear_has_offset_value1();
}
inline double S2App_Sensor_List_SensorData::offset_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value1)
  return offset_value1_;
}
inline void S2App_Sensor_List_SensorData::set_offset_value1(double value) {
  set_has_offset_value1();
  offset_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value1)
}

// required double offset_value2 = 14;
inline bool S2App_Sensor_List_SensorData::has_offset_value2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_offset_value2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void S2App_Sensor_List_SensorData::clear_has_offset_value2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void S2App_Sensor_List_SensorData::clear_offset_value2() {
  offset_value2_ = 0;
  clear_has_offset_value2();
}
inline double S2App_Sensor_List_SensorData::offset_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value2)
  return offset_value2_;
}
inline void S2App_Sensor_List_SensorData::set_offset_value2(double value) {
  set_has_offset_value2();
  offset_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value2)
}

// required double offset_value3 = 15;
inline bool S2App_Sensor_List_SensorData::has_offset_value3() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_offset_value3() {
  _has_bits_[0] |= 0x00010000u;
}
inline void S2App_Sensor_List_SensorData::clear_has_offset_value3() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void S2App_Sensor_List_SensorData::clear_offset_value3() {
  offset_value3_ = 0;
  clear_has_offset_value3();
}
inline double S2App_Sensor_List_SensorData::offset_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value3)
  return offset_value3_;
}
inline void S2App_Sensor_List_SensorData::set_offset_value3(double value) {
  set_has_offset_value3();
  offset_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.offset_value3)
}

// required bytes url = 16;
inline bool S2App_Sensor_List_SensorData::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Sensor_List_SensorData::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Sensor_List_SensorData::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2App_Sensor_List_SensorData::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
  return url_.GetNoArena();
}
inline void S2App_Sensor_List_SensorData::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
}
#if LANG_CXX11
inline void S2App_Sensor_List_SensorData::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
}
#endif
inline void S2App_Sensor_List_SensorData::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
}
inline void S2App_Sensor_List_SensorData::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
}
inline ::std::string* S2App_Sensor_List_SensorData::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2App_Sensor_List_SensorData::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2App_Sensor_List_SensorData::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.url)
}

// required bytes description = 17;
inline bool S2App_Sensor_List_SensorData::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2App_Sensor_List_SensorData::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2App_Sensor_List_SensorData::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2App_Sensor_List_SensorData::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& S2App_Sensor_List_SensorData::description() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
  return description_.GetNoArena();
}
inline void S2App_Sensor_List_SensorData::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
}
#if LANG_CXX11
inline void S2App_Sensor_List_SensorData::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
}
#endif
inline void S2App_Sensor_List_SensorData::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
}
inline void S2App_Sensor_List_SensorData::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
}
inline ::std::string* S2App_Sensor_List_SensorData::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2App_Sensor_List_SensorData::release_description() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2App_Sensor_List_SensorData::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.description)
}

// -------------------------------------------------------------------

// S2App_Sensor_List

// repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
inline int S2App_Sensor_List::sensor_list_size() const {
  return sensor_list_.size();
}
inline void S2App_Sensor_List::clear_sensor_list() {
  sensor_list_.Clear();
}
inline const ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData& S2App_Sensor_List::sensor_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Get(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* S2App_Sensor_List::mutable_sensor_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Mutable(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* S2App_Sensor_List::add_sensor_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >*
S2App_Sensor_List::mutable_sensor_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return &sensor_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >&
S2App_Sensor_List::sensor_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_;
}

// -------------------------------------------------------------------

// S2App_Sensor_History_SensorData

// required double min_value1 = 1;
inline bool S2App_Sensor_History_SensorData::has_min_value1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_value1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_value1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Sensor_History_SensorData::clear_min_value1() {
  min_value1_ = 0;
  clear_has_min_value1();
}
inline double S2App_Sensor_History_SensorData::min_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value1)
  return min_value1_;
}
inline void S2App_Sensor_History_SensorData::set_min_value1(double value) {
  set_has_min_value1();
  min_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value1)
}

// required double min_value2 = 2;
inline bool S2App_Sensor_History_SensorData::has_min_value2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_value2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_value2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2App_Sensor_History_SensorData::clear_min_value2() {
  min_value2_ = 0;
  clear_has_min_value2();
}
inline double S2App_Sensor_History_SensorData::min_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value2)
  return min_value2_;
}
inline void S2App_Sensor_History_SensorData::set_min_value2(double value) {
  set_has_min_value2();
  min_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value2)
}

// required double min_value3 = 3;
inline bool S2App_Sensor_History_SensorData::has_min_value3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_value3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_value3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2App_Sensor_History_SensorData::clear_min_value3() {
  min_value3_ = 0;
  clear_has_min_value3();
}
inline double S2App_Sensor_History_SensorData::min_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value3)
  return min_value3_;
}
inline void S2App_Sensor_History_SensorData::set_min_value3(double value) {
  set_has_min_value3();
  min_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_value3)
}

// required double max_value1 = 4;
inline bool S2App_Sensor_History_SensorData::has_max_value1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_value1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_value1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2App_Sensor_History_SensorData::clear_max_value1() {
  max_value1_ = 0;
  clear_has_max_value1();
}
inline double S2App_Sensor_History_SensorData::max_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value1)
  return max_value1_;
}
inline void S2App_Sensor_History_SensorData::set_max_value1(double value) {
  set_has_max_value1();
  max_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value1)
}

// required double max_value2 = 5;
inline bool S2App_Sensor_History_SensorData::has_max_value2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_value2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_value2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2App_Sensor_History_SensorData::clear_max_value2() {
  max_value2_ = 0;
  clear_has_max_value2();
}
inline double S2App_Sensor_History_SensorData::max_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value2)
  return max_value2_;
}
inline void S2App_Sensor_History_SensorData::set_max_value2(double value) {
  set_has_max_value2();
  max_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value2)
}

// required double max_value3 = 6;
inline bool S2App_Sensor_History_SensorData::has_max_value3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_value3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_value3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2App_Sensor_History_SensorData::clear_max_value3() {
  max_value3_ = 0;
  clear_has_max_value3();
}
inline double S2App_Sensor_History_SensorData::max_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value3)
  return max_value3_;
}
inline void S2App_Sensor_History_SensorData::set_max_value3(double value) {
  set_has_max_value3();
  max_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_value3)
}

// required double min_offset_value1 = 7;
inline bool S2App_Sensor_History_SensorData::has_min_offset_value1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_offset_value1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_offset_value1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2App_Sensor_History_SensorData::clear_min_offset_value1() {
  min_offset_value1_ = 0;
  clear_has_min_offset_value1();
}
inline double S2App_Sensor_History_SensorData::min_offset_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value1)
  return min_offset_value1_;
}
inline void S2App_Sensor_History_SensorData::set_min_offset_value1(double value) {
  set_has_min_offset_value1();
  min_offset_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value1)
}

// required double min_offset_value2 = 8;
inline bool S2App_Sensor_History_SensorData::has_min_offset_value2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_offset_value2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_offset_value2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2App_Sensor_History_SensorData::clear_min_offset_value2() {
  min_offset_value2_ = 0;
  clear_has_min_offset_value2();
}
inline double S2App_Sensor_History_SensorData::min_offset_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value2)
  return min_offset_value2_;
}
inline void S2App_Sensor_History_SensorData::set_min_offset_value2(double value) {
  set_has_min_offset_value2();
  min_offset_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value2)
}

// required double min_offset_value3 = 9;
inline bool S2App_Sensor_History_SensorData::has_min_offset_value3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_min_offset_value3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void S2App_Sensor_History_SensorData::clear_has_min_offset_value3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void S2App_Sensor_History_SensorData::clear_min_offset_value3() {
  min_offset_value3_ = 0;
  clear_has_min_offset_value3();
}
inline double S2App_Sensor_History_SensorData::min_offset_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value3)
  return min_offset_value3_;
}
inline void S2App_Sensor_History_SensorData::set_min_offset_value3(double value) {
  set_has_min_offset_value3();
  min_offset_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.min_offset_value3)
}

// required double max_offset_value1 = 10;
inline bool S2App_Sensor_History_SensorData::has_max_offset_value1() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_offset_value1() {
  _has_bits_[0] |= 0x00000200u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_offset_value1() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void S2App_Sensor_History_SensorData::clear_max_offset_value1() {
  max_offset_value1_ = 0;
  clear_has_max_offset_value1();
}
inline double S2App_Sensor_History_SensorData::max_offset_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value1)
  return max_offset_value1_;
}
inline void S2App_Sensor_History_SensorData::set_max_offset_value1(double value) {
  set_has_max_offset_value1();
  max_offset_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value1)
}

// required double max_offset_value2 = 11;
inline bool S2App_Sensor_History_SensorData::has_max_offset_value2() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_offset_value2() {
  _has_bits_[0] |= 0x00000400u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_offset_value2() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void S2App_Sensor_History_SensorData::clear_max_offset_value2() {
  max_offset_value2_ = 0;
  clear_has_max_offset_value2();
}
inline double S2App_Sensor_History_SensorData::max_offset_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value2)
  return max_offset_value2_;
}
inline void S2App_Sensor_History_SensorData::set_max_offset_value2(double value) {
  set_has_max_offset_value2();
  max_offset_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value2)
}

// required double max_offset_value3 = 12;
inline bool S2App_Sensor_History_SensorData::has_max_offset_value3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void S2App_Sensor_History_SensorData::set_has_max_offset_value3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void S2App_Sensor_History_SensorData::clear_has_max_offset_value3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void S2App_Sensor_History_SensorData::clear_max_offset_value3() {
  max_offset_value3_ = 0;
  clear_has_max_offset_value3();
}
inline double S2App_Sensor_History_SensorData::max_offset_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value3)
  return max_offset_value3_;
}
inline void S2App_Sensor_History_SensorData::set_max_offset_value3(double value) {
  set_has_max_offset_value3();
  max_offset_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.max_offset_value3)
}

// -------------------------------------------------------------------

// S2App_Sensor_History

// required uint32 id = 1;
inline bool S2App_Sensor_History::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2App_Sensor_History::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2App_Sensor_History::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2App_Sensor_History::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2App_Sensor_History::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.id)
  return id_;
}
inline void S2App_Sensor_History::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.id)
}

// required double longitude = 2;
inline bool S2App_Sensor_History::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2App_Sensor_History::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2App_Sensor_History::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2App_Sensor_History::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2App_Sensor_History::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.longitude)
  return longitude_;
}
inline void S2App_Sensor_History::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.longitude)
}

// required double latitude = 3;
inline bool S2App_Sensor_History::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2App_Sensor_History::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2App_Sensor_History::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2App_Sensor_History::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2App_Sensor_History::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.latitude)
  return latitude_;
}
inline void S2App_Sensor_History::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.latitude)
}

// required uint32 begin_time = 4;
inline bool S2App_Sensor_History::has_begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2App_Sensor_History::set_has_begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2App_Sensor_History::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2App_Sensor_History::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
inline ::google::protobuf::uint32 S2App_Sensor_History::begin_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.begin_time)
  return begin_time_;
}
inline void S2App_Sensor_History::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.begin_time)
}

// required uint32 end_time = 5;
inline bool S2App_Sensor_History::has_end_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2App_Sensor_History::set_has_end_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2App_Sensor_History::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2App_Sensor_History::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
inline ::google::protobuf::uint32 S2App_Sensor_History::end_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.end_time)
  return end_time_;
}
inline void S2App_Sensor_History::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.end_time)
}

// required uint32 invterval = 6;
inline bool S2App_Sensor_History::has_invterval() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2App_Sensor_History::set_has_invterval() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2App_Sensor_History::clear_has_invterval() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2App_Sensor_History::clear_invterval() {
  invterval_ = 0u;
  clear_has_invterval();
}
inline ::google::protobuf::uint32 S2App_Sensor_History::invterval() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.invterval)
  return invterval_;
}
inline void S2App_Sensor_History::set_invterval(::google::protobuf::uint32 value) {
  set_has_invterval();
  invterval_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.invterval)
}

// required double avg_value1 = 7;
inline bool S2App_Sensor_History::has_avg_value1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2App_Sensor_History::set_has_avg_value1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2App_Sensor_History::clear_has_avg_value1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2App_Sensor_History::clear_avg_value1() {
  avg_value1_ = 0;
  clear_has_avg_value1();
}
inline double S2App_Sensor_History::avg_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value1)
  return avg_value1_;
}
inline void S2App_Sensor_History::set_avg_value1(double value) {
  set_has_avg_value1();
  avg_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value1)
}

// required double avg_value2 = 8;
inline bool S2App_Sensor_History::has_avg_value2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2App_Sensor_History::set_has_avg_value2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2App_Sensor_History::clear_has_avg_value2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2App_Sensor_History::clear_avg_value2() {
  avg_value2_ = 0;
  clear_has_avg_value2();
}
inline double S2App_Sensor_History::avg_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value2)
  return avg_value2_;
}
inline void S2App_Sensor_History::set_avg_value2(double value) {
  set_has_avg_value2();
  avg_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value2)
}

// required double avg_value3 = 9;
inline bool S2App_Sensor_History::has_avg_value3() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void S2App_Sensor_History::set_has_avg_value3() {
  _has_bits_[0] |= 0x00000100u;
}
inline void S2App_Sensor_History::clear_has_avg_value3() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void S2App_Sensor_History::clear_avg_value3() {
  avg_value3_ = 0;
  clear_has_avg_value3();
}
inline double S2App_Sensor_History::avg_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value3)
  return avg_value3_;
}
inline void S2App_Sensor_History::set_avg_value3(double value) {
  set_has_avg_value3();
  avg_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value3)
}

// repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 10;
inline int S2App_Sensor_History::history_list_size() const {
  return history_list_.size();
}
inline void S2App_Sensor_History::clear_history_list() {
  history_list_.Clear();
}
inline const ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData& S2App_Sensor_History::history_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Get(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* S2App_Sensor_History::mutable_history_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Mutable(index);
}
inline ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* S2App_Sensor_History::add_history_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >*
S2App_Sensor_History::mutable_history_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return &history_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >&
S2App_Sensor_History::history_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_;
}

// -------------------------------------------------------------------

// S2APP_ERROR

// required uint32 error_code = 1;
inline bool S2APP_ERROR::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_ERROR::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_ERROR::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_ERROR::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 S2APP_ERROR::error_code() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_ERROR.error_code)
  return error_code_;
}
inline void S2APP_ERROR::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_ERROR.error_code)
}

// -------------------------------------------------------------------

// S2APP_New_Slope

// required uint32 id = 1;
inline bool S2APP_New_Slope::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2APP_New_Slope::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2APP_New_Slope::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2APP_New_Slope::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2APP_New_Slope::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.id)
  return id_;
}
inline void S2APP_New_Slope::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.id)
}

// required uint32 type = 2;
inline bool S2APP_New_Slope::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2APP_New_Slope::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2APP_New_Slope::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2APP_New_Slope::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2APP_New_Slope::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.type)
  return type_;
}
inline void S2APP_New_Slope::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.type)
}

// required bytes name = 3;
inline bool S2APP_New_Slope::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_New_Slope::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_New_Slope::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_New_Slope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& S2APP_New_Slope::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
  return name_.GetNoArena();
}
inline void S2APP_New_Slope::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
}
#if LANG_CXX11
inline void S2APP_New_Slope::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
}
#endif
inline void S2APP_New_Slope::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
}
inline void S2APP_New_Slope::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
}
inline ::std::string* S2APP_New_Slope::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_New_Slope::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_New_Slope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_New_Slope.name)
}

// required uint32 state = 4;
inline bool S2APP_New_Slope::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2APP_New_Slope::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2APP_New_Slope::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2APP_New_Slope::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2APP_New_Slope::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.state)
  return state_;
}
inline void S2APP_New_Slope::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.state)
}

// required double longitude = 5;
inline bool S2APP_New_Slope::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2APP_New_Slope::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2APP_New_Slope::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2APP_New_Slope::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2APP_New_Slope::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.longitude)
  return longitude_;
}
inline void S2APP_New_Slope::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.longitude)
}

// required double latitude = 6;
inline bool S2APP_New_Slope::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2APP_New_Slope::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2APP_New_Slope::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2APP_New_Slope::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2APP_New_Slope::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.latitude)
  return latitude_;
}
inline void S2APP_New_Slope::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.latitude)
}

// required bytes url = 7;
inline bool S2APP_New_Slope::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2APP_New_Slope::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2APP_New_Slope::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2APP_New_Slope::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2APP_New_Slope::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
  return url_.GetNoArena();
}
inline void S2APP_New_Slope::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
}
#if LANG_CXX11
inline void S2APP_New_Slope::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
}
#endif
inline void S2APP_New_Slope::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
}
inline void S2APP_New_Slope::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
}
inline ::std::string* S2APP_New_Slope::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_New_Slope::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_New_Slope::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_New_Slope.url)
}

// -------------------------------------------------------------------

// S2APP_Del_Slope

// required uint32 result = 1;
inline bool S2APP_Del_Slope::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Del_Slope::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Del_Slope::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Del_Slope::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 S2APP_Del_Slope::result() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Del_Slope.result)
  return result_;
}
inline void S2APP_Del_Slope::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Del_Slope.result)
}

// -------------------------------------------------------------------

// S2APP_Update_Slope

// required uint32 id = 1;
inline bool S2APP_Update_Slope::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2APP_Update_Slope::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2APP_Update_Slope::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2APP_Update_Slope::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2APP_Update_Slope::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.id)
  return id_;
}
inline void S2APP_Update_Slope::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.id)
}

// required uint32 type = 2;
inline bool S2APP_Update_Slope::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2APP_Update_Slope::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2APP_Update_Slope::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2APP_Update_Slope::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2APP_Update_Slope::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.type)
  return type_;
}
inline void S2APP_Update_Slope::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.type)
}

// required bytes name = 3;
inline bool S2APP_Update_Slope::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Update_Slope::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Update_Slope::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Update_Slope::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& S2APP_Update_Slope::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
  return name_.GetNoArena();
}
inline void S2APP_Update_Slope::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
}
#if LANG_CXX11
inline void S2APP_Update_Slope::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
}
#endif
inline void S2APP_Update_Slope::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
}
inline void S2APP_Update_Slope::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
}
inline ::std::string* S2APP_Update_Slope::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Update_Slope::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Update_Slope::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Update_Slope.name)
}

// required uint32 state = 4;
inline bool S2APP_Update_Slope::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2APP_Update_Slope::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2APP_Update_Slope::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2APP_Update_Slope::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2APP_Update_Slope::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.state)
  return state_;
}
inline void S2APP_Update_Slope::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.state)
}

// required double longitude = 5;
inline bool S2APP_Update_Slope::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2APP_Update_Slope::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2APP_Update_Slope::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2APP_Update_Slope::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2APP_Update_Slope::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.longitude)
  return longitude_;
}
inline void S2APP_Update_Slope::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.longitude)
}

// required double latitude = 6;
inline bool S2APP_Update_Slope::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2APP_Update_Slope::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2APP_Update_Slope::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2APP_Update_Slope::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2APP_Update_Slope::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.latitude)
  return latitude_;
}
inline void S2APP_Update_Slope::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.latitude)
}

// required bytes url = 7;
inline bool S2APP_Update_Slope::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2APP_Update_Slope::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2APP_Update_Slope::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2APP_Update_Slope::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2APP_Update_Slope::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
  return url_.GetNoArena();
}
inline void S2APP_Update_Slope::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
}
#if LANG_CXX11
inline void S2APP_Update_Slope::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
}
#endif
inline void S2APP_Update_Slope::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
}
inline void S2APP_Update_Slope::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
}
inline ::std::string* S2APP_Update_Slope::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Update_Slope::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Update_Slope::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Update_Slope.url)
}

// -------------------------------------------------------------------

// S2APP_Add_Sensor

// required uint32 id = 1;
inline bool S2APP_Add_Sensor::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2APP_Add_Sensor::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2APP_Add_Sensor::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2APP_Add_Sensor::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2APP_Add_Sensor::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.id)
  return id_;
}
inline void S2APP_Add_Sensor::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.id)
}

// required uint32 type = 2;
inline bool S2APP_Add_Sensor::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2APP_Add_Sensor::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2APP_Add_Sensor::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2APP_Add_Sensor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2APP_Add_Sensor::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.type)
  return type_;
}
inline void S2APP_Add_Sensor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.type)
}

// required uint32 state = 3;
inline bool S2APP_Add_Sensor::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2APP_Add_Sensor::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2APP_Add_Sensor::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2APP_Add_Sensor::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2APP_Add_Sensor::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.state)
  return state_;
}
inline void S2APP_Add_Sensor::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.state)
}

// required uint32 slope_id = 4;
inline bool S2APP_Add_Sensor::has_slope_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2APP_Add_Sensor::set_has_slope_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2APP_Add_Sensor::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2APP_Add_Sensor::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 S2APP_Add_Sensor::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.slope_id)
  return slope_id_;
}
inline void S2APP_Add_Sensor::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.slope_id)
}

// required double longitude = 5;
inline bool S2APP_Add_Sensor::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2APP_Add_Sensor::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2APP_Add_Sensor::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2APP_Add_Sensor::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2APP_Add_Sensor::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.longitude)
  return longitude_;
}
inline void S2APP_Add_Sensor::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.longitude)
}

// required double latitude = 6;
inline bool S2APP_Add_Sensor::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2APP_Add_Sensor::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2APP_Add_Sensor::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2APP_Add_Sensor::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2APP_Add_Sensor::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.latitude)
  return latitude_;
}
inline void S2APP_Add_Sensor::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.latitude)
}

// required bytes url = 7;
inline bool S2APP_Add_Sensor::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Add_Sensor::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Add_Sensor::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Add_Sensor::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2APP_Add_Sensor::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
  return url_.GetNoArena();
}
inline void S2APP_Add_Sensor::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
}
#if LANG_CXX11
inline void S2APP_Add_Sensor::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
}
#endif
inline void S2APP_Add_Sensor::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
}
inline void S2APP_Add_Sensor::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
}
inline ::std::string* S2APP_Add_Sensor::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Add_Sensor::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Add_Sensor::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.url)
}

// required bytes description = 8;
inline bool S2APP_Add_Sensor::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2APP_Add_Sensor::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2APP_Add_Sensor::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2APP_Add_Sensor::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& S2APP_Add_Sensor::description() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
  return description_.GetNoArena();
}
inline void S2APP_Add_Sensor::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
}
#if LANG_CXX11
inline void S2APP_Add_Sensor::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
}
#endif
inline void S2APP_Add_Sensor::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
}
inline void S2APP_Add_Sensor::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
}
inline ::std::string* S2APP_Add_Sensor::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Add_Sensor::release_description() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Add_Sensor::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Add_Sensor.description)
}

// -------------------------------------------------------------------

// S2APP_Del_Sensor

// required uint32 result = 1;
inline bool S2APP_Del_Sensor::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Del_Sensor::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Del_Sensor::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Del_Sensor::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 S2APP_Del_Sensor::result() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Del_Sensor.result)
  return result_;
}
inline void S2APP_Del_Sensor::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Del_Sensor.result)
}

// -------------------------------------------------------------------

// S2APP_Update_Sensor

// required uint32 id = 1;
inline bool S2APP_Update_Sensor::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2APP_Update_Sensor::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2APP_Update_Sensor::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2APP_Update_Sensor::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 S2APP_Update_Sensor::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.id)
  return id_;
}
inline void S2APP_Update_Sensor::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.id)
}

// required uint32 type = 2;
inline bool S2APP_Update_Sensor::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2APP_Update_Sensor::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2APP_Update_Sensor::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2APP_Update_Sensor::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 S2APP_Update_Sensor::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.type)
  return type_;
}
inline void S2APP_Update_Sensor::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.type)
}

// required uint32 state = 3;
inline bool S2APP_Update_Sensor::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2APP_Update_Sensor::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2APP_Update_Sensor::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2APP_Update_Sensor::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 S2APP_Update_Sensor::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.state)
  return state_;
}
inline void S2APP_Update_Sensor::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.state)
}

// required uint32 slope_id = 4;
inline bool S2APP_Update_Sensor::has_slope_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2APP_Update_Sensor::set_has_slope_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2APP_Update_Sensor::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2APP_Update_Sensor::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
inline ::google::protobuf::uint32 S2APP_Update_Sensor::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.slope_id)
  return slope_id_;
}
inline void S2APP_Update_Sensor::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.slope_id)
}

// required double longitude = 5;
inline bool S2APP_Update_Sensor::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2APP_Update_Sensor::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2APP_Update_Sensor::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2APP_Update_Sensor::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double S2APP_Update_Sensor::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.longitude)
  return longitude_;
}
inline void S2APP_Update_Sensor::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.longitude)
}

// required double latitude = 6;
inline bool S2APP_Update_Sensor::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2APP_Update_Sensor::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2APP_Update_Sensor::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2APP_Update_Sensor::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double S2APP_Update_Sensor::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.latitude)
  return latitude_;
}
inline void S2APP_Update_Sensor::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.latitude)
}

// required bytes url = 7;
inline bool S2APP_Update_Sensor::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Update_Sensor::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Update_Sensor::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Update_Sensor::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& S2APP_Update_Sensor::url() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
  return url_.GetNoArena();
}
inline void S2APP_Update_Sensor::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
}
#if LANG_CXX11
inline void S2APP_Update_Sensor::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
}
#endif
inline void S2APP_Update_Sensor::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
}
inline void S2APP_Update_Sensor::set_url(const void* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
}
inline ::std::string* S2APP_Update_Sensor::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Update_Sensor::release_url() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Update_Sensor::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.url)
}

// required bytes description = 8;
inline bool S2APP_Update_Sensor::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2APP_Update_Sensor::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2APP_Update_Sensor::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2APP_Update_Sensor::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& S2APP_Update_Sensor::description() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
  return description_.GetNoArena();
}
inline void S2APP_Update_Sensor::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
}
#if LANG_CXX11
inline void S2APP_Update_Sensor::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
}
#endif
inline void S2APP_Update_Sensor::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
}
inline void S2APP_Update_Sensor::set_description(const void* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
}
inline ::std::string* S2APP_Update_Sensor::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2APP_Update_Sensor::release_description() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2APP_Update_Sensor::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2APP_Update_Sensor.description)
}

// -------------------------------------------------------------------

// S2APP_Modify_Password_Result

// required uint32 result = 1;
inline bool S2APP_Modify_Password_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2APP_Modify_Password_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2APP_Modify_Password_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2APP_Modify_Password_Result::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 S2APP_Modify_Password_Result::result() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2APP_Modify_Password_Result.result)
  return result_;
}
inline void S2APP_Modify_Password_Result::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2APP_Modify_Password_Result.result)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace APP_SERVER_NET_Protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::APP_SERVER_NET_Protocol::APP2S> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::APP_SERVER_NET_Protocol::APP2S>() {
  return ::APP_SERVER_NET_Protocol::APP2S_descriptor();
}
template <> struct is_proto_enum< ::APP_SERVER_NET_Protocol::S2APP> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::APP_SERVER_NET_Protocol::S2APP>() {
  return ::APP_SERVER_NET_Protocol::S2APP_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_App_5fServer_5fProtocol_2eproto__INCLUDED
