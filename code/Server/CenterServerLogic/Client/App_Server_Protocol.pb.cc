// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: App_Server_Protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "App_Server_Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace APP_SERVER_NET_Protocol {
class App2S_LoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<App2S_Login> {
} _App2S_Login_default_instance_;
class APP2S_Request_Slope_ListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APP2S_Request_Slope_List> {
} _APP2S_Request_Slope_List_default_instance_;
class APP2S_Request_Sensor_ListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APP2S_Request_Sensor_List> {
} _APP2S_Request_Sensor_List_default_instance_;
class APP2S_Request_Sensor_HistoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<APP2S_Request_Sensor_History> {
} _APP2S_Request_Sensor_History_default_instance_;
class S2App_Login_Result_ServerDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Login_Result_ServerData> {
} _S2App_Login_Result_ServerData_default_instance_;
class S2App_Login_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Login_Result> {
} _S2App_Login_Result_default_instance_;
class S2App_Slope_List_SlopeDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Slope_List_SlopeData> {
} _S2App_Slope_List_SlopeData_default_instance_;
class S2App_Slope_ListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Slope_List> {
} _S2App_Slope_List_default_instance_;
class S2App_Sensor_List_SensorDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Sensor_List_SensorData> {
} _S2App_Sensor_List_SensorData_default_instance_;
class S2App_Sensor_ListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Sensor_List> {
} _S2App_Sensor_List_default_instance_;
class S2App_Sensor_History_SensorDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Sensor_History_SensorData> {
} _S2App_Sensor_History_SensorData_default_instance_;
class S2App_Sensor_HistoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_Sensor_History> {
} _S2App_Sensor_History_default_instance_;
class S2App_All_List_SlopeDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_All_List_SlopeData> {
} _S2App_All_List_SlopeData_default_instance_;
class S2App_All_List_SensorDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_All_List_SensorData> {
} _S2App_All_List_SensorData_default_instance_;
class S2App_All_ListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<S2App_All_List> {
} _S2App_All_List_default_instance_;

namespace protobuf_App_5fServer_5fProtocol_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App2S_Login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App2S_Login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App2S_Login, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App2S_Login, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Slope_List, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Slope_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Slope_List, server_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_List, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_List, slope_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_History, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_History, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_History, sensor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_History, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APP2S_Request_Sensor_History, end_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result_ServerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result_ServerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result_ServerData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result_ServerData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result_ServerData, port_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Login_Result, server_list_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List_SlopeData, latitude_),
  1,
  2,
  0,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Slope_List, slope_list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, cur_value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, cur_value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List_SensorData, cur_value3_),
  0,
  1,
  7,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_List, sensor_list_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, value3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, offset_value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, offset_value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History_SensorData, offset_value3_),
  8,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, avg_value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, avg_value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, avg_value3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_Sensor_History, history_list_),
  0,
  1,
  5,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SlopeData, latitude_),
  1,
  2,
  0,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, cur_value1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, cur_value2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List_SensorData, cur_value3_),
  0,
  1,
  7,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List, slope_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(S2App_All_List, sensor_list_),
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(App2S_Login)},
  { 9, 15, sizeof(APP2S_Request_Slope_List)},
  { 16, 22, sizeof(APP2S_Request_Sensor_List)},
  { 23, 31, sizeof(APP2S_Request_Sensor_History)},
  { 34, 42, sizeof(S2App_Login_Result_ServerData)},
  { 45, 52, sizeof(S2App_Login_Result)},
  { 54, 65, sizeof(S2App_Slope_List_SlopeData)},
  { 71, 77, sizeof(S2App_Slope_List)},
  { 78, 91, sizeof(S2App_Sensor_List_SensorData)},
  { 99, 105, sizeof(S2App_Sensor_List)},
  { 106, 120, sizeof(S2App_Sensor_History_SensorData)},
  { 129, 141, sizeof(S2App_Sensor_History)},
  { 148, 159, sizeof(S2App_All_List_SlopeData)},
  { 165, 178, sizeof(S2App_All_List_SensorData)},
  { 186, 193, sizeof(S2App_All_List)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_App2S_Login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APP2S_Request_Slope_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APP2S_Request_Sensor_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_APP2S_Request_Sensor_History_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Login_Result_ServerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Login_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Slope_List_SlopeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Slope_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Sensor_List_SensorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Sensor_List_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Sensor_History_SensorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_Sensor_History_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_All_List_SlopeData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_All_List_SensorData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_S2App_All_List_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "App_Server_Protocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace

void TableStruct::Shutdown() {
  _App2S_Login_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _APP2S_Request_Slope_List_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _APP2S_Request_Sensor_List_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _APP2S_Request_Sensor_History_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _S2App_Login_Result_ServerData_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _S2App_Login_Result_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _S2App_Slope_List_SlopeData_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _S2App_Slope_List_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _S2App_Sensor_List_SensorData_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _S2App_Sensor_List_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _S2App_Sensor_History_SensorData_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _S2App_Sensor_History_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _S2App_All_List_SlopeData_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _S2App_All_List_SensorData_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _S2App_All_List_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _App2S_Login_default_instance_.DefaultConstruct();
  _APP2S_Request_Slope_List_default_instance_.DefaultConstruct();
  _APP2S_Request_Sensor_List_default_instance_.DefaultConstruct();
  _APP2S_Request_Sensor_History_default_instance_.DefaultConstruct();
  _S2App_Login_Result_ServerData_default_instance_.DefaultConstruct();
  _S2App_Login_Result_default_instance_.DefaultConstruct();
  _S2App_Slope_List_SlopeData_default_instance_.DefaultConstruct();
  _S2App_Slope_List_default_instance_.DefaultConstruct();
  _S2App_Sensor_List_SensorData_default_instance_.DefaultConstruct();
  _S2App_Sensor_List_default_instance_.DefaultConstruct();
  _S2App_Sensor_History_SensorData_default_instance_.DefaultConstruct();
  _S2App_Sensor_History_default_instance_.DefaultConstruct();
  _S2App_All_List_SlopeData_default_instance_.DefaultConstruct();
  _S2App_All_List_SensorData_default_instance_.DefaultConstruct();
  _S2App_All_List_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031App_Server_Protocol.proto\022\027APP_SERVER_"
      "NET_Protocol\"0\n\013App2S_Login\022\017\n\007account\030\001"
      " \002(\014\022\020\n\010password\030\002 \002(\014\"-\n\030APP2S_Request_"
      "Slope_List\022\021\n\tserver_id\030\001 \002(\r\"-\n\031APP2S_R"
      "equest_Sensor_List\022\020\n\010slope_id\030\001 \002(\r\"W\n\034"
      "APP2S_Request_Sensor_History\022\021\n\tsensor_i"
      "d\030\001 \002(\r\022\022\n\nbegin_time\030\002 \002(\r\022\020\n\010end_time\030"
      "\003 \002(\r\"\245\001\n\022S2App_Login_Result\022\016\n\006result\030\001"
      " \002(\r\022K\n\013server_list\030\002 \003(\01326.APP_SERVER_N"
      "ET_Protocol.S2App_Login_Result.ServerDat"
      "a\0322\n\nServerData\022\n\n\002id\030\001 \002(\r\022\n\n\002ip\030\002 \002(\014\022"
      "\014\n\004port\030\003 \002(\r\"\304\001\n\020S2App_Slope_List\022G\n\nsl"
      "ope_list\030\001 \003(\01323.APP_SERVER_NET_Protocol"
      ".S2App_Slope_List.SlopeData\032g\n\tSlopeData"
      "\022\n\n\002id\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\014\n\004name\030\003 \002(\014"
      "\022\r\n\005state\030\004 \002(\r\022\021\n\tlongitude\030\005 \002(\001\022\020\n\010la"
      "titude\030\006 \002(\001\"\370\001\n\021S2App_Sensor_List\022J\n\013se"
      "nsor_list\030\001 \003(\01325.APP_SERVER_NET_Protoco"
      "l.S2App_Sensor_List.SensorData\032\226\001\n\nSenso"
      "rData\022\n\n\002id\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\r\n\005state"
      "\030\003 \002(\r\022\021\n\tlongitude\030\004 \002(\001\022\020\n\010latitude\030\005 "
      "\002(\001\022\022\n\ncur_value1\030\006 \002(\001\022\022\n\ncur_value2\030\007 "
      "\002(\001\022\022\n\ncur_value3\030\010 \002(\001\"\214\003\n\024S2App_Sensor"
      "_History\022\n\n\002id\030\001 \002(\r\022\022\n\nbegin_time\030\002 \002(\r"
      "\022\020\n\010end_time\030\003 \002(\r\022\022\n\navg_value1\030\004 \002(\001\022\022"
      "\n\navg_value2\030\005 \002(\001\022\022\n\navg_value3\030\006 \002(\001\022N"
      "\n\014history_list\030\007 \003(\01328.APP_SERVER_NET_Pr"
      "otocol.S2App_Sensor_History.SensorData\032\265"
      "\001\n\nSensorData\022\r\n\005state\030\001 \002(\r\022\021\n\tlongitud"
      "e\030\002 \002(\001\022\020\n\010latitude\030\003 \002(\001\022\016\n\006value1\030\004 \002("
      "\001\022\016\n\006value2\030\005 \002(\001\022\016\n\006value3\030\006 \002(\001\022\025\n\roff"
      "set_value1\030\007 \002(\001\022\025\n\roffset_value2\030\010 \002(\001\022"
      "\025\n\roffset_value3\030\t \002(\001\"\242\003\n\016S2App_All_Lis"
      "t\022E\n\nslope_list\030\001 \003(\01321.APP_SERVER_NET_P"
      "rotocol.S2App_All_List.SlopeData\022G\n\013sens"
      "or_list\030\002 \003(\01322.APP_SERVER_NET_Protocol."
      "S2App_All_List.SensorData\032g\n\tSlopeData\022\n"
      "\n\002id\030\001 \002(\r\022\014\n\004type\030\002 \002(\r\022\014\n\004name\030\003 \002(\014\022\r"
      "\n\005state\030\004 \002(\r\022\021\n\tlongitude\030\005 \002(\001\022\020\n\010lati"
      "tude\030\006 \002(\001\032\226\001\n\nSensorData\022\n\n\002id\030\001 \002(\r\022\014\n"
      "\004type\030\002 \002(\r\022\r\n\005state\030\003 \002(\r\022\021\n\tlongitude\030"
      "\004 \002(\001\022\020\n\010latitude\030\005 \002(\001\022\022\n\ncur_value1\030\006 "
      "\002(\001\022\022\n\ncur_value2\030\007 \002(\001\022\022\n\ncur_value3\030\010 "
      "\002(\001*\246\004\n\005APP2S\022\017\n\013app2s_login\020\000\022\034\n\030app2s_"
      "request_slope_list\020\001\022\035\n\031app2s_request_se"
      "nsor_list\020\002\022 \n\034app2s_request_sensor_hist"
      "ory\020\003\022\016\n\napp2s_ping\020\004\022\032\n\026app2s_request_a"
      "ll_list\020\005\022\022\n\016app2s_reserve3\020\006\022\022\n\016app2s_r"
      "eserve4\020\007\022\022\n\016app2s_reserve5\020\010\022\022\n\016app2s_r"
      "eserve6\020\t\022\022\n\016app2s_reserve7\020\n\022\022\n\016app2s_r"
      "eserve8\020\013\022\022\n\016app2s_reserve9\020\014\022\023\n\017app2s_r"
      "eserve10\020\r\022\023\n\017app2s_reserve11\020\016\022\023\n\017app2s"
      "_reserve12\020\017\022\023\n\017app2s_reserve13\020\020\022\023\n\017app"
      "2s_reserve14\020\021\022\023\n\017app2s_reserve15\020\022\022\023\n\017a"
      "pp2s_reserve16\020\023\022\023\n\017app2s_reserve17\020\024\022\023\n"
      "\017app2s_reserve18\020\025\022\023\n\017app2s_reserve19\020\026\022"
      "\023\n\017app2s_reserve20\020\027\022\016\n\tapp2s_max\020\200\002*\212\001\n"
      "\005S2APP\022\026\n\022s2app_login_result\020\000\022\024\n\020s2app_"
      "slope_list\020\001\022\025\n\021s2app_sensor_list\020\002\022\030\n\024s"
      "2app_sensor_history\020\003\022\022\n\016s2app_all_list\020"
      "\004\022\016\n\ts2app_max\020\200\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2417);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "App_Server_Protocol.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_App_5fServer_5fProtocol_2eproto

const ::google::protobuf::EnumDescriptor* APP2S_descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_enum_descriptors[0];
}
bool APP2S_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 256:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* S2APP_descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_enum_descriptors[1];
}
bool S2APP_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 256:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int App2S_Login::kAccountFieldNumber;
const int App2S_Login::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

App2S_Login::App2S_Login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.App2S_Login)
}
App2S_Login::App2S_Login(const App2S_Login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.App2S_Login)
}

void App2S_Login::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

App2S_Login::~App2S_Login() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.App2S_Login)
  SharedDtor();
}

void App2S_Login::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void App2S_Login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* App2S_Login::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const App2S_Login& App2S_Login::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

App2S_Login* App2S_Login::New(::google::protobuf::Arena* arena) const {
  App2S_Login* n = new App2S_Login;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void App2S_Login::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.App2S_Login)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool App2S_Login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.App2S_Login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_account()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.App2S_Login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.App2S_Login)
  return false;
#undef DO_
}

void App2S_Login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.App2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->account(), output);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.App2S_Login)
}

::google::protobuf::uint8* App2S_Login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.App2S_Login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes account = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->account(), target);
  }

  // required bytes password = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.App2S_Login)
  return target;
}

size_t App2S_Login::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.App2S_Login)
  size_t total_size = 0;

  if (has_account()) {
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());
  }

  if (has_password()) {
    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  return total_size;
}
size_t App2S_Login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.App2S_Login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes account = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->account());

    // required bytes password = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void App2S_Login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.App2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  const App2S_Login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const App2S_Login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.App2S_Login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.App2S_Login)
    MergeFrom(*source);
  }
}

void App2S_Login::MergeFrom(const App2S_Login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.App2S_Login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void App2S_Login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.App2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void App2S_Login::CopyFrom(const App2S_Login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.App2S_Login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool App2S_Login::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void App2S_Login::Swap(App2S_Login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void App2S_Login::InternalSwap(App2S_Login* other) {
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata App2S_Login::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// App2S_Login

// required bytes account = 1;
bool App2S_Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void App2S_Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void App2S_Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void App2S_Login::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& App2S_Login::account() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.App2S_Login.account)
  return account_.GetNoArena();
}
void App2S_Login::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.App2S_Login.account)
}
#if LANG_CXX11
void App2S_Login::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.App2S_Login.account)
}
#endif
void App2S_Login::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.App2S_Login.account)
}
void App2S_Login::set_account(const void* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.App2S_Login.account)
}
::std::string* App2S_Login::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.App2S_Login.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* App2S_Login::release_account() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.App2S_Login.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void App2S_Login::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.App2S_Login.account)
}

// required bytes password = 2;
bool App2S_Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void App2S_Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void App2S_Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void App2S_Login::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& App2S_Login::password() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.App2S_Login.password)
  return password_.GetNoArena();
}
void App2S_Login::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.App2S_Login.password)
}
#if LANG_CXX11
void App2S_Login::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.App2S_Login.password)
}
#endif
void App2S_Login::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.App2S_Login.password)
}
void App2S_Login::set_password(const void* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.App2S_Login.password)
}
::std::string* App2S_Login::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.App2S_Login.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* App2S_Login::release_password() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.App2S_Login.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void App2S_Login::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.App2S_Login.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APP2S_Request_Slope_List::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APP2S_Request_Slope_List::APP2S_Request_Slope_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
}
APP2S_Request_Slope_List::APP2S_Request_Slope_List(const APP2S_Request_Slope_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_ = from.server_id_;
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
}

void APP2S_Request_Slope_List::SharedCtor() {
  _cached_size_ = 0;
  server_id_ = 0u;
}

APP2S_Request_Slope_List::~APP2S_Request_Slope_List() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  SharedDtor();
}

void APP2S_Request_Slope_List::SharedDtor() {
}

void APP2S_Request_Slope_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APP2S_Request_Slope_List::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APP2S_Request_Slope_List& APP2S_Request_Slope_List::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

APP2S_Request_Slope_List* APP2S_Request_Slope_List::New(::google::protobuf::Arena* arena) const {
  APP2S_Request_Slope_List* n = new APP2S_Request_Slope_List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APP2S_Request_Slope_List::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  server_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APP2S_Request_Slope_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_server_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  return false;
#undef DO_
}

void APP2S_Request_Slope_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 server_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
}

::google::protobuf::uint8* APP2S_Request_Slope_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 server_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  return target;
}

size_t APP2S_Request_Slope_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 server_id = 1;
  if (has_server_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APP2S_Request_Slope_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  GOOGLE_DCHECK_NE(&from, this);
  const APP2S_Request_Slope_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APP2S_Request_Slope_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
    MergeFrom(*source);
  }
}

void APP2S_Request_Slope_List::MergeFrom(const APP2S_Request_Slope_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_server_id()) {
    set_server_id(from.server_id());
  }
}

void APP2S_Request_Slope_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APP2S_Request_Slope_List::CopyFrom(const APP2S_Request_Slope_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APP2S_Request_Slope_List::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void APP2S_Request_Slope_List::Swap(APP2S_Request_Slope_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APP2S_Request_Slope_List::InternalSwap(APP2S_Request_Slope_List* other) {
  std::swap(server_id_, other->server_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APP2S_Request_Slope_List::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APP2S_Request_Slope_List

// required uint32 server_id = 1;
bool APP2S_Request_Slope_List::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APP2S_Request_Slope_List::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
void APP2S_Request_Slope_List::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void APP2S_Request_Slope_List::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
::google::protobuf::uint32 APP2S_Request_Slope_List::server_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List.server_id)
  return server_id_;
}
void APP2S_Request_Slope_List::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Slope_List.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APP2S_Request_Sensor_List::kSlopeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APP2S_Request_Sensor_List::APP2S_Request_Sensor_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
}
APP2S_Request_Sensor_List::APP2S_Request_Sensor_List(const APP2S_Request_Sensor_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slope_id_ = from.slope_id_;
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
}

void APP2S_Request_Sensor_List::SharedCtor() {
  _cached_size_ = 0;
  slope_id_ = 0u;
}

APP2S_Request_Sensor_List::~APP2S_Request_Sensor_List() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  SharedDtor();
}

void APP2S_Request_Sensor_List::SharedDtor() {
}

void APP2S_Request_Sensor_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APP2S_Request_Sensor_List::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APP2S_Request_Sensor_List& APP2S_Request_Sensor_List::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

APP2S_Request_Sensor_List* APP2S_Request_Sensor_List::New(::google::protobuf::Arena* arena) const {
  APP2S_Request_Sensor_List* n = new APP2S_Request_Sensor_List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APP2S_Request_Sensor_List::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  slope_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APP2S_Request_Sensor_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 slope_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_slope_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slope_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  return false;
#undef DO_
}

void APP2S_Request_Sensor_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slope_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slope_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
}

::google::protobuf::uint8* APP2S_Request_Sensor_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 slope_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slope_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  return target;
}

size_t APP2S_Request_Sensor_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 slope_id = 1;
  if (has_slope_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->slope_id());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APP2S_Request_Sensor_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  GOOGLE_DCHECK_NE(&from, this);
  const APP2S_Request_Sensor_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APP2S_Request_Sensor_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
    MergeFrom(*source);
  }
}

void APP2S_Request_Sensor_List::MergeFrom(const APP2S_Request_Sensor_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slope_id()) {
    set_slope_id(from.slope_id());
  }
}

void APP2S_Request_Sensor_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APP2S_Request_Sensor_List::CopyFrom(const APP2S_Request_Sensor_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APP2S_Request_Sensor_List::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void APP2S_Request_Sensor_List::Swap(APP2S_Request_Sensor_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APP2S_Request_Sensor_List::InternalSwap(APP2S_Request_Sensor_List* other) {
  std::swap(slope_id_, other->slope_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APP2S_Request_Sensor_List::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APP2S_Request_Sensor_List

// required uint32 slope_id = 1;
bool APP2S_Request_Sensor_List::has_slope_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APP2S_Request_Sensor_List::set_has_slope_id() {
  _has_bits_[0] |= 0x00000001u;
}
void APP2S_Request_Sensor_List::clear_has_slope_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void APP2S_Request_Sensor_List::clear_slope_id() {
  slope_id_ = 0u;
  clear_has_slope_id();
}
::google::protobuf::uint32 APP2S_Request_Sensor_List::slope_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.slope_id)
  return slope_id_;
}
void APP2S_Request_Sensor_List::set_slope_id(::google::protobuf::uint32 value) {
  set_has_slope_id();
  slope_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_List.slope_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APP2S_Request_Sensor_History::kSensorIdFieldNumber;
const int APP2S_Request_Sensor_History::kBeginTimeFieldNumber;
const int APP2S_Request_Sensor_History::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APP2S_Request_Sensor_History::APP2S_Request_Sensor_History()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
}
APP2S_Request_Sensor_History::APP2S_Request_Sensor_History(const APP2S_Request_Sensor_History& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sensor_id_, &from.sensor_id_,
    reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&sensor_id_) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
}

void APP2S_Request_Sensor_History::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sensor_id_, 0, reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&sensor_id_) + sizeof(end_time_));
}

APP2S_Request_Sensor_History::~APP2S_Request_Sensor_History() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  SharedDtor();
}

void APP2S_Request_Sensor_History::SharedDtor() {
}

void APP2S_Request_Sensor_History::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APP2S_Request_Sensor_History::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const APP2S_Request_Sensor_History& APP2S_Request_Sensor_History::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

APP2S_Request_Sensor_History* APP2S_Request_Sensor_History::New(::google::protobuf::Arena* arena) const {
  APP2S_Request_Sensor_History* n = new APP2S_Request_Sensor_History;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APP2S_Request_Sensor_History::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&sensor_id_, 0, reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&sensor_id_) + sizeof(end_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool APP2S_Request_Sensor_History::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 sensor_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sensor_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sensor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 begin_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_begin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  return false;
#undef DO_
}

void APP2S_Request_Sensor_History::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 sensor_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sensor_id(), output);
  }

  // required uint32 begin_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->begin_time(), output);
  }

  // required uint32 end_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
}

::google::protobuf::uint8* APP2S_Request_Sensor_History::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 sensor_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sensor_id(), target);
  }

  // required uint32 begin_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->begin_time(), target);
  }

  // required uint32 end_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  return target;
}

size_t APP2S_Request_Sensor_History::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  size_t total_size = 0;

  if (has_sensor_id()) {
    // required uint32 sensor_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensor_id());
  }

  if (has_begin_time()) {
    // required uint32 begin_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());
  }

  if (has_end_time()) {
    // required uint32 end_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  return total_size;
}
size_t APP2S_Request_Sensor_History::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 sensor_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sensor_id());

    // required uint32 begin_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());

    // required uint32 end_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APP2S_Request_Sensor_History::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  GOOGLE_DCHECK_NE(&from, this);
  const APP2S_Request_Sensor_History* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const APP2S_Request_Sensor_History>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
    MergeFrom(*source);
  }
}

void APP2S_Request_Sensor_History::MergeFrom(const APP2S_Request_Sensor_History& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      sensor_id_ = from.sensor_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      begin_time_ = from.begin_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      end_time_ = from.end_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void APP2S_Request_Sensor_History::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APP2S_Request_Sensor_History::CopyFrom(const APP2S_Request_Sensor_History& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APP2S_Request_Sensor_History::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void APP2S_Request_Sensor_History::Swap(APP2S_Request_Sensor_History* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APP2S_Request_Sensor_History::InternalSwap(APP2S_Request_Sensor_History* other) {
  std::swap(sensor_id_, other->sensor_id_);
  std::swap(begin_time_, other->begin_time_);
  std::swap(end_time_, other->end_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APP2S_Request_Sensor_History::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APP2S_Request_Sensor_History

// required uint32 sensor_id = 1;
bool APP2S_Request_Sensor_History::has_sensor_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APP2S_Request_Sensor_History::set_has_sensor_id() {
  _has_bits_[0] |= 0x00000001u;
}
void APP2S_Request_Sensor_History::clear_has_sensor_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void APP2S_Request_Sensor_History::clear_sensor_id() {
  sensor_id_ = 0u;
  clear_has_sensor_id();
}
::google::protobuf::uint32 APP2S_Request_Sensor_History::sensor_id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.sensor_id)
  return sensor_id_;
}
void APP2S_Request_Sensor_History::set_sensor_id(::google::protobuf::uint32 value) {
  set_has_sensor_id();
  sensor_id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.sensor_id)
}

// required uint32 begin_time = 2;
bool APP2S_Request_Sensor_History::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APP2S_Request_Sensor_History::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
void APP2S_Request_Sensor_History::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void APP2S_Request_Sensor_History::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
::google::protobuf::uint32 APP2S_Request_Sensor_History::begin_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.begin_time)
  return begin_time_;
}
void APP2S_Request_Sensor_History::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.begin_time)
}

// required uint32 end_time = 3;
bool APP2S_Request_Sensor_History::has_end_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APP2S_Request_Sensor_History::set_has_end_time() {
  _has_bits_[0] |= 0x00000004u;
}
void APP2S_Request_Sensor_History::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void APP2S_Request_Sensor_History::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
::google::protobuf::uint32 APP2S_Request_Sensor_History::end_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.end_time)
  return end_time_;
}
void APP2S_Request_Sensor_History::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.APP2S_Request_Sensor_History.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Login_Result_ServerData::kIdFieldNumber;
const int S2App_Login_Result_ServerData::kIpFieldNumber;
const int S2App_Login_Result_ServerData::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Login_Result_ServerData::S2App_Login_Result_ServerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
}
S2App_Login_Result_ServerData::S2App_Login_Result_ServerData(const S2App_Login_Result_ServerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ip()) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&id_) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
}

void S2App_Login_Result_ServerData::SharedCtor() {
  _cached_size_ = 0;
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&id_) + sizeof(port_));
}

S2App_Login_Result_ServerData::~S2App_Login_Result_ServerData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  SharedDtor();
}

void S2App_Login_Result_ServerData::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2App_Login_Result_ServerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Login_Result_ServerData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Login_Result_ServerData& S2App_Login_Result_ServerData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Login_Result_ServerData* S2App_Login_Result_ServerData::New(::google::protobuf::Arena* arena) const {
  S2App_Login_Result_ServerData* n = new S2App_Login_Result_ServerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Login_Result_ServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  if (has_ip()) {
    GOOGLE_DCHECK(!ip_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*ip_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&id_) + sizeof(port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Login_Result_ServerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  return false;
#undef DO_
}

void S2App_Login_Result_ServerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required bytes ip = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
}

::google::protobuf::uint8* S2App_Login_Result_ServerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required bytes ip = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // required uint32 port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  return target;
}

size_t S2App_Login_Result_ServerData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  size_t total_size = 0;

  if (has_ip()) {
    // required bytes ip = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_port()) {
    // required uint32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  return total_size;
}
size_t S2App_Login_Result_ServerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes ip = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 port = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Login_Result_ServerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Login_Result_ServerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Login_Result_ServerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
    MergeFrom(*source);
  }
}

void S2App_Login_Result_ServerData::MergeFrom(const S2App_Login_Result_ServerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ip();
      ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      port_ = from.port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_Login_Result_ServerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Login_Result_ServerData::CopyFrom(const S2App_Login_Result_ServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Login_Result_ServerData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void S2App_Login_Result_ServerData::Swap(S2App_Login_Result_ServerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Login_Result_ServerData::InternalSwap(S2App_Login_Result_ServerData* other) {
  ip_.Swap(&other->ip_);
  std::swap(id_, other->id_);
  std::swap(port_, other->port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Login_Result_ServerData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Login_Result_ServerData

// required uint32 id = 1;
bool S2App_Login_Result_ServerData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_Login_Result_ServerData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_Login_Result_ServerData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_Login_Result_ServerData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_Login_Result_ServerData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.id)
  return id_;
}
void S2App_Login_Result_ServerData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.id)
}

// required bytes ip = 2;
bool S2App_Login_Result_ServerData::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Login_Result_ServerData::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Login_Result_ServerData::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Login_Result_ServerData::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
const ::std::string& S2App_Login_Result_ServerData::ip() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  return ip_.GetNoArena();
}
void S2App_Login_Result_ServerData::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
#if LANG_CXX11
void S2App_Login_Result_ServerData::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
#endif
void S2App_Login_Result_ServerData::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
void S2App_Login_Result_ServerData::set_ip(const void* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}
::std::string* S2App_Login_Result_ServerData::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2App_Login_Result_ServerData::release_ip() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2App_Login_Result_ServerData::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.ip)
}

// required uint32 port = 3;
bool S2App_Login_Result_ServerData::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_Login_Result_ServerData::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_Login_Result_ServerData::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_Login_Result_ServerData::clear_port() {
  port_ = 0u;
  clear_has_port();
}
::google::protobuf::uint32 S2App_Login_Result_ServerData::port() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.port)
  return port_;
}
void S2App_Login_Result_ServerData::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Login_Result::kResultFieldNumber;
const int S2App_Login_Result::kServerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Login_Result::S2App_Login_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Login_Result)
}
S2App_Login_Result::S2App_Login_Result(const S2App_Login_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      server_list_(from.server_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Login_Result)
}

void S2App_Login_Result::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

S2App_Login_Result::~S2App_Login_Result() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Login_Result)
  SharedDtor();
}

void S2App_Login_Result::SharedDtor() {
}

void S2App_Login_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Login_Result::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Login_Result& S2App_Login_Result::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Login_Result* S2App_Login_Result::New(::google::protobuf::Arena* arena) const {
  S2App_Login_Result* n = new S2App_Login_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Login_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  server_list_.Clear();
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Login_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Login_Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Login_Result)
  return false;
#undef DO_
}

void S2App_Login_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
  for (unsigned int i = 0, n = this->server_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Login_Result)
}

::google::protobuf::uint8* S2App_Login_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
  for (unsigned int i = 0, n = this->server_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->server_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Login_Result)
  return target;
}

size_t S2App_Login_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }
  // repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
  {
    unsigned int count = this->server_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Login_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Login_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Login_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Login_Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Login_Result)
    MergeFrom(*source);
  }
}

void S2App_Login_Result::MergeFrom(const S2App_Login_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_list_.MergeFrom(from.server_list_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void S2App_Login_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Login_Result::CopyFrom(const S2App_Login_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Login_Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Login_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->server_list())) return false;
  return true;
}

void S2App_Login_Result::Swap(S2App_Login_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Login_Result::InternalSwap(S2App_Login_Result* other) {
  server_list_.InternalSwap(&other->server_list_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Login_Result::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Login_Result

// required uint32 result = 1;
bool S2App_Login_Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Login_Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Login_Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Login_Result::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 S2App_Login_Result::result() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.result)
  return result_;
}
void S2App_Login_Result::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Login_Result.result)
}

// repeated .APP_SERVER_NET_Protocol.S2App_Login_Result.ServerData server_list = 2;
int S2App_Login_Result::server_list_size() const {
  return server_list_.size();
}
void S2App_Login_Result::clear_server_list() {
  server_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData& S2App_Login_Result::server_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* S2App_Login_Result::mutable_server_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData* S2App_Login_Result::add_server_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >*
S2App_Login_Result::mutable_server_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return &server_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Login_Result_ServerData >&
S2App_Login_Result::server_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Login_Result.server_list)
  return server_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Slope_List_SlopeData::kIdFieldNumber;
const int S2App_Slope_List_SlopeData::kTypeFieldNumber;
const int S2App_Slope_List_SlopeData::kNameFieldNumber;
const int S2App_Slope_List_SlopeData::kStateFieldNumber;
const int S2App_Slope_List_SlopeData::kLongitudeFieldNumber;
const int S2App_Slope_List_SlopeData::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Slope_List_SlopeData::S2App_Slope_List_SlopeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
}
S2App_Slope_List_SlopeData::S2App_Slope_List_SlopeData(const S2App_Slope_List_SlopeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
}

void S2App_Slope_List_SlopeData::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
}

S2App_Slope_List_SlopeData::~S2App_Slope_List_SlopeData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  SharedDtor();
}

void S2App_Slope_List_SlopeData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2App_Slope_List_SlopeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Slope_List_SlopeData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Slope_List_SlopeData& S2App_Slope_List_SlopeData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Slope_List_SlopeData* S2App_Slope_List_SlopeData::New(::google::protobuf::Arena* arena) const {
  S2App_Slope_List_SlopeData* n = new S2App_Slope_List_SlopeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Slope_List_SlopeData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Slope_List_SlopeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  return false;
#undef DO_
}

void S2App_Slope_List_SlopeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // required uint32 state = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // required double longitude = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->longitude(), output);
  }

  // required double latitude = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
}

::google::protobuf::uint8* S2App_Slope_List_SlopeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // required uint32 state = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // required double longitude = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->longitude(), target);
  }

  // required double latitude = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  return target;
}

size_t S2App_Slope_List_SlopeData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_type()) {
    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_longitude()) {
    // required double longitude = 5;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 6;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required uint32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  return total_size;
}
size_t S2App_Slope_List_SlopeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required double longitude = 5;
    total_size += 1 + 8;

    // required double latitude = 6;
    total_size += 1 + 8;

    // required uint32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Slope_List_SlopeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Slope_List_SlopeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Slope_List_SlopeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
    MergeFrom(*source);
  }
}

void S2App_Slope_List_SlopeData::MergeFrom(const S2App_Slope_List_SlopeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_Slope_List_SlopeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Slope_List_SlopeData::CopyFrom(const S2App_Slope_List_SlopeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Slope_List_SlopeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void S2App_Slope_List_SlopeData::Swap(S2App_Slope_List_SlopeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Slope_List_SlopeData::InternalSwap(S2App_Slope_List_SlopeData* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Slope_List_SlopeData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Slope_List_SlopeData

// required uint32 id = 1;
bool S2App_Slope_List_SlopeData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_Slope_List_SlopeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_Slope_List_SlopeData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_Slope_List_SlopeData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.id)
  return id_;
}
void S2App_Slope_List_SlopeData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.id)
}

// required uint32 type = 2;
bool S2App_Slope_List_SlopeData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_Slope_List_SlopeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_Slope_List_SlopeData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 S2App_Slope_List_SlopeData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.type)
  return type_;
}
void S2App_Slope_List_SlopeData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.type)
}

// required bytes name = 3;
bool S2App_Slope_List_SlopeData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Slope_List_SlopeData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Slope_List_SlopeData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& S2App_Slope_List_SlopeData::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  return name_.GetNoArena();
}
void S2App_Slope_List_SlopeData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
#if LANG_CXX11
void S2App_Slope_List_SlopeData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
#endif
void S2App_Slope_List_SlopeData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
void S2App_Slope_List_SlopeData::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}
::std::string* S2App_Slope_List_SlopeData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2App_Slope_List_SlopeData::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2App_Slope_List_SlopeData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.name)
}

// required uint32 state = 4;
bool S2App_Slope_List_SlopeData::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_Slope_List_SlopeData::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_Slope_List_SlopeData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 S2App_Slope_List_SlopeData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.state)
  return state_;
}
void S2App_Slope_List_SlopeData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.state)
}

// required double longitude = 5;
bool S2App_Slope_List_SlopeData::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_Slope_List_SlopeData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_Slope_List_SlopeData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double S2App_Slope_List_SlopeData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.longitude)
  return longitude_;
}
void S2App_Slope_List_SlopeData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.longitude)
}

// required double latitude = 6;
bool S2App_Slope_List_SlopeData::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_Slope_List_SlopeData::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_Slope_List_SlopeData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_Slope_List_SlopeData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double S2App_Slope_List_SlopeData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.latitude)
  return latitude_;
}
void S2App_Slope_List_SlopeData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Slope_List::kSlopeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Slope_List::S2App_Slope_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Slope_List)
}
S2App_Slope_List::S2App_Slope_List(const S2App_Slope_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      slope_list_(from.slope_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Slope_List)
}

void S2App_Slope_List::SharedCtor() {
  _cached_size_ = 0;
}

S2App_Slope_List::~S2App_Slope_List() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Slope_List)
  SharedDtor();
}

void S2App_Slope_List::SharedDtor() {
}

void S2App_Slope_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Slope_List::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Slope_List& S2App_Slope_List::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Slope_List* S2App_Slope_List::New(::google::protobuf::Arena* arena) const {
  S2App_Slope_List* n = new S2App_Slope_List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Slope_List::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  slope_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Slope_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slope_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Slope_List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Slope_List)
  return false;
#undef DO_
}

void S2App_Slope_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
  for (unsigned int i = 0, n = this->slope_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->slope_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Slope_List)
}

::google::protobuf::uint8* S2App_Slope_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
  for (unsigned int i = 0, n = this->slope_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->slope_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Slope_List)
  return target;
}

size_t S2App_Slope_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
  {
    unsigned int count = this->slope_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slope_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Slope_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Slope_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Slope_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Slope_List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Slope_List)
    MergeFrom(*source);
  }
}

void S2App_Slope_List::MergeFrom(const S2App_Slope_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slope_list_.MergeFrom(from.slope_list_);
}

void S2App_Slope_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Slope_List::CopyFrom(const S2App_Slope_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Slope_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Slope_List::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->slope_list())) return false;
  return true;
}

void S2App_Slope_List::Swap(S2App_Slope_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Slope_List::InternalSwap(S2App_Slope_List* other) {
  slope_list_.InternalSwap(&other->slope_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Slope_List::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Slope_List

// repeated .APP_SERVER_NET_Protocol.S2App_Slope_List.SlopeData slope_list = 1;
int S2App_Slope_List::slope_list_size() const {
  return slope_list_.size();
}
void S2App_Slope_List::clear_slope_list() {
  slope_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData& S2App_Slope_List::slope_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* S2App_Slope_List::mutable_slope_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData* S2App_Slope_List::add_slope_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >*
S2App_Slope_List::mutable_slope_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return &slope_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Slope_List_SlopeData >&
S2App_Slope_List::slope_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Slope_List.slope_list)
  return slope_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Sensor_List_SensorData::kIdFieldNumber;
const int S2App_Sensor_List_SensorData::kTypeFieldNumber;
const int S2App_Sensor_List_SensorData::kStateFieldNumber;
const int S2App_Sensor_List_SensorData::kLongitudeFieldNumber;
const int S2App_Sensor_List_SensorData::kLatitudeFieldNumber;
const int S2App_Sensor_List_SensorData::kCurValue1FieldNumber;
const int S2App_Sensor_List_SensorData::kCurValue2FieldNumber;
const int S2App_Sensor_List_SensorData::kCurValue3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Sensor_List_SensorData::S2App_Sensor_List_SensorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
}
S2App_Sensor_List_SensorData::S2App_Sensor_List_SensorData(const S2App_Sensor_List_SensorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
}

void S2App_Sensor_List_SensorData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
}

S2App_Sensor_List_SensorData::~S2App_Sensor_List_SensorData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  SharedDtor();
}

void S2App_Sensor_List_SensorData::SharedDtor() {
}

void S2App_Sensor_List_SensorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Sensor_List_SensorData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Sensor_List_SensorData& S2App_Sensor_List_SensorData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Sensor_List_SensorData* S2App_Sensor_List_SensorData::New(::google::protobuf::Arena* arena) const {
  S2App_Sensor_List_SensorData* n = new S2App_Sensor_List_SensorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Sensor_List_SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Sensor_List_SensorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_cur_value1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_cur_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_cur_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  return false;
#undef DO_
}

void S2App_Sensor_List_SensorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required uint32 state = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->state(), output);
  }

  // required double longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitude(), output);
  }

  // required double latitude = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->latitude(), output);
  }

  // required double cur_value1 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cur_value1(), output);
  }

  // required double cur_value2 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->cur_value2(), output);
  }

  // required double cur_value3 = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->cur_value3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
}

::google::protobuf::uint8* S2App_Sensor_List_SensorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required uint32 state = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->state(), target);
  }

  // required double longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->longitude(), target);
  }

  // required double latitude = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->latitude(), target);
  }

  // required double cur_value1 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->cur_value1(), target);
  }

  // required double cur_value2 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->cur_value2(), target);
  }

  // required double cur_value3 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->cur_value3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  return target;
}

size_t S2App_Sensor_List_SensorData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_type()) {
    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_longitude()) {
    // required double longitude = 4;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 5;
    total_size += 1 + 8;
  }

  if (has_cur_value1()) {
    // required double cur_value1 = 6;
    total_size += 1 + 8;
  }

  if (has_cur_value2()) {
    // required double cur_value2 = 7;
    total_size += 1 + 8;
  }

  if (has_cur_value3()) {
    // required double cur_value3 = 8;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  return total_size;
}
size_t S2App_Sensor_List_SensorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required double longitude = 4;
    total_size += 1 + 8;

    // required double latitude = 5;
    total_size += 1 + 8;

    // required double cur_value1 = 6;
    total_size += 1 + 8;

    // required double cur_value2 = 7;
    total_size += 1 + 8;

    // required double cur_value3 = 8;
    total_size += 1 + 8;

    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Sensor_List_SensorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Sensor_List_SensorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Sensor_List_SensorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
    MergeFrom(*source);
  }
}

void S2App_Sensor_List_SensorData::MergeFrom(const S2App_Sensor_List_SensorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      cur_value1_ = from.cur_value1_;
    }
    if (cached_has_bits & 0x00000020u) {
      cur_value2_ = from.cur_value2_;
    }
    if (cached_has_bits & 0x00000040u) {
      cur_value3_ = from.cur_value3_;
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_Sensor_List_SensorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Sensor_List_SensorData::CopyFrom(const S2App_Sensor_List_SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Sensor_List_SensorData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void S2App_Sensor_List_SensorData::Swap(S2App_Sensor_List_SensorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Sensor_List_SensorData::InternalSwap(S2App_Sensor_List_SensorData* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(cur_value1_, other->cur_value1_);
  std::swap(cur_value2_, other->cur_value2_);
  std::swap(cur_value3_, other->cur_value3_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Sensor_List_SensorData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Sensor_List_SensorData

// required uint32 id = 1;
bool S2App_Sensor_List_SensorData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Sensor_List_SensorData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Sensor_List_SensorData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_Sensor_List_SensorData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.id)
  return id_;
}
void S2App_Sensor_List_SensorData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.id)
}

// required uint32 type = 2;
bool S2App_Sensor_List_SensorData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_Sensor_List_SensorData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_Sensor_List_SensorData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 S2App_Sensor_List_SensorData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.type)
  return type_;
}
void S2App_Sensor_List_SensorData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.type)
}

// required uint32 state = 3;
bool S2App_Sensor_List_SensorData::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
void S2App_Sensor_List_SensorData::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
void S2App_Sensor_List_SensorData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 S2App_Sensor_List_SensorData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.state)
  return state_;
}
void S2App_Sensor_List_SensorData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.state)
}

// required double longitude = 4;
bool S2App_Sensor_List_SensorData::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_Sensor_List_SensorData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_Sensor_List_SensorData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double S2App_Sensor_List_SensorData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.longitude)
  return longitude_;
}
void S2App_Sensor_List_SensorData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.longitude)
}

// required double latitude = 5;
bool S2App_Sensor_List_SensorData::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_Sensor_List_SensorData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_Sensor_List_SensorData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double S2App_Sensor_List_SensorData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.latitude)
  return latitude_;
}
void S2App_Sensor_List_SensorData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.latitude)
}

// required double cur_value1 = 6;
bool S2App_Sensor_List_SensorData::has_cur_value1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_cur_value1() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_Sensor_List_SensorData::clear_has_cur_value1() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_Sensor_List_SensorData::clear_cur_value1() {
  cur_value1_ = 0;
  clear_has_cur_value1();
}
double S2App_Sensor_List_SensorData::cur_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value1)
  return cur_value1_;
}
void S2App_Sensor_List_SensorData::set_cur_value1(double value) {
  set_has_cur_value1();
  cur_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value1)
}

// required double cur_value2 = 7;
bool S2App_Sensor_List_SensorData::has_cur_value2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_cur_value2() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_Sensor_List_SensorData::clear_has_cur_value2() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_Sensor_List_SensorData::clear_cur_value2() {
  cur_value2_ = 0;
  clear_has_cur_value2();
}
double S2App_Sensor_List_SensorData::cur_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value2)
  return cur_value2_;
}
void S2App_Sensor_List_SensorData::set_cur_value2(double value) {
  set_has_cur_value2();
  cur_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value2)
}

// required double cur_value3 = 8;
bool S2App_Sensor_List_SensorData::has_cur_value3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void S2App_Sensor_List_SensorData::set_has_cur_value3() {
  _has_bits_[0] |= 0x00000040u;
}
void S2App_Sensor_List_SensorData::clear_has_cur_value3() {
  _has_bits_[0] &= ~0x00000040u;
}
void S2App_Sensor_List_SensorData::clear_cur_value3() {
  cur_value3_ = 0;
  clear_has_cur_value3();
}
double S2App_Sensor_List_SensorData::cur_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value3)
  return cur_value3_;
}
void S2App_Sensor_List_SensorData::set_cur_value3(double value) {
  set_has_cur_value3();
  cur_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData.cur_value3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Sensor_List::kSensorListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Sensor_List::S2App_Sensor_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Sensor_List)
}
S2App_Sensor_List::S2App_Sensor_List(const S2App_Sensor_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sensor_list_(from.sensor_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Sensor_List)
}

void S2App_Sensor_List::SharedCtor() {
  _cached_size_ = 0;
}

S2App_Sensor_List::~S2App_Sensor_List() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  SharedDtor();
}

void S2App_Sensor_List::SharedDtor() {
}

void S2App_Sensor_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Sensor_List::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Sensor_List& S2App_Sensor_List::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Sensor_List* S2App_Sensor_List::New(::google::protobuf::Arena* arena) const {
  S2App_Sensor_List* n = new S2App_Sensor_List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Sensor_List::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  sensor_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Sensor_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensor_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  return false;
#undef DO_
}

void S2App_Sensor_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
  for (unsigned int i = 0, n = this->sensor_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensor_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Sensor_List)
}

::google::protobuf::uint8* S2App_Sensor_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
  for (unsigned int i = 0, n = this->sensor_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sensor_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  return target;
}

size_t S2App_Sensor_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
  {
    unsigned int count = this->sensor_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sensor_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Sensor_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Sensor_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Sensor_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Sensor_List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Sensor_List)
    MergeFrom(*source);
  }
}

void S2App_Sensor_List::MergeFrom(const S2App_Sensor_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sensor_list_.MergeFrom(from.sensor_list_);
}

void S2App_Sensor_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Sensor_List::CopyFrom(const S2App_Sensor_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Sensor_List::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->sensor_list())) return false;
  return true;
}

void S2App_Sensor_List::Swap(S2App_Sensor_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Sensor_List::InternalSwap(S2App_Sensor_List* other) {
  sensor_list_.InternalSwap(&other->sensor_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Sensor_List::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Sensor_List

// repeated .APP_SERVER_NET_Protocol.S2App_Sensor_List.SensorData sensor_list = 1;
int S2App_Sensor_List::sensor_list_size() const {
  return sensor_list_.size();
}
void S2App_Sensor_List::clear_sensor_list() {
  sensor_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData& S2App_Sensor_List::sensor_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* S2App_Sensor_List::mutable_sensor_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData* S2App_Sensor_List::add_sensor_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >*
S2App_Sensor_List::mutable_sensor_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return &sensor_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_List_SensorData >&
S2App_Sensor_List::sensor_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Sensor_List.sensor_list)
  return sensor_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Sensor_History_SensorData::kStateFieldNumber;
const int S2App_Sensor_History_SensorData::kLongitudeFieldNumber;
const int S2App_Sensor_History_SensorData::kLatitudeFieldNumber;
const int S2App_Sensor_History_SensorData::kValue1FieldNumber;
const int S2App_Sensor_History_SensorData::kValue2FieldNumber;
const int S2App_Sensor_History_SensorData::kValue3FieldNumber;
const int S2App_Sensor_History_SensorData::kOffsetValue1FieldNumber;
const int S2App_Sensor_History_SensorData::kOffsetValue2FieldNumber;
const int S2App_Sensor_History_SensorData::kOffsetValue3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Sensor_History_SensorData::S2App_Sensor_History_SensorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
}
S2App_Sensor_History_SensorData::S2App_Sensor_History_SensorData(const S2App_Sensor_History_SensorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
}

void S2App_Sensor_History_SensorData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&longitude_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(state_));
}

S2App_Sensor_History_SensorData::~S2App_Sensor_History_SensorData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  SharedDtor();
}

void S2App_Sensor_History_SensorData::SharedDtor() {
}

void S2App_Sensor_History_SensorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Sensor_History_SensorData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Sensor_History_SensorData& S2App_Sensor_History_SensorData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Sensor_History_SensorData* S2App_Sensor_History_SensorData::New(::google::protobuf::Arena* arena) const {
  S2App_Sensor_History_SensorData* n = new S2App_Sensor_History_SensorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Sensor_History_SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&longitude_, 0, reinterpret_cast<char*>(&offset_value3_) -
      reinterpret_cast<char*>(&longitude_) + sizeof(offset_value3_));
  }
  state_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Sensor_History_SensorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double value1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_value1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double value2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double value3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_value1 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_offset_value1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_value2 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_offset_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double offset_value3 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_offset_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  return false;
#undef DO_
}

void S2App_Sensor_History_SensorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 state = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->state(), output);
  }

  // required double longitude = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double latitude = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  // required double value1 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->value1(), output);
  }

  // required double value2 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->value2(), output);
  }

  // required double value3 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->value3(), output);
  }

  // required double offset_value1 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->offset_value1(), output);
  }

  // required double offset_value2 = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->offset_value2(), output);
  }

  // required double offset_value3 = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->offset_value3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
}

::google::protobuf::uint8* S2App_Sensor_History_SensorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 state = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->state(), target);
  }

  // required double longitude = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // required double latitude = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  // required double value1 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->value1(), target);
  }

  // required double value2 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->value2(), target);
  }

  // required double value3 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->value3(), target);
  }

  // required double offset_value1 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->offset_value1(), target);
  }

  // required double offset_value2 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->offset_value2(), target);
  }

  // required double offset_value3 = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->offset_value3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  return target;
}

size_t S2App_Sensor_History_SensorData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  size_t total_size = 0;

  if (has_longitude()) {
    // required double longitude = 2;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 3;
    total_size += 1 + 8;
  }

  if (has_value1()) {
    // required double value1 = 4;
    total_size += 1 + 8;
  }

  if (has_value2()) {
    // required double value2 = 5;
    total_size += 1 + 8;
  }

  if (has_value3()) {
    // required double value3 = 6;
    total_size += 1 + 8;
  }

  if (has_offset_value1()) {
    // required double offset_value1 = 7;
    total_size += 1 + 8;
  }

  if (has_offset_value2()) {
    // required double offset_value2 = 8;
    total_size += 1 + 8;
  }

  if (has_offset_value3()) {
    // required double offset_value3 = 9;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required uint32 state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  return total_size;
}
size_t S2App_Sensor_History_SensorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required double longitude = 2;
    total_size += 1 + 8;

    // required double latitude = 3;
    total_size += 1 + 8;

    // required double value1 = 4;
    total_size += 1 + 8;

    // required double value2 = 5;
    total_size += 1 + 8;

    // required double value3 = 6;
    total_size += 1 + 8;

    // required double offset_value1 = 7;
    total_size += 1 + 8;

    // required double offset_value2 = 8;
    total_size += 1 + 8;

    // required double offset_value3 = 9;
    total_size += 1 + 8;

    // required uint32 state = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Sensor_History_SensorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Sensor_History_SensorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Sensor_History_SensorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
    MergeFrom(*source);
  }
}

void S2App_Sensor_History_SensorData::MergeFrom(const S2App_Sensor_History_SensorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000002u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      value1_ = from.value1_;
    }
    if (cached_has_bits & 0x00000008u) {
      value2_ = from.value2_;
    }
    if (cached_has_bits & 0x00000010u) {
      value3_ = from.value3_;
    }
    if (cached_has_bits & 0x00000020u) {
      offset_value1_ = from.offset_value1_;
    }
    if (cached_has_bits & 0x00000040u) {
      offset_value2_ = from.offset_value2_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_value3_ = from.offset_value3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_state(from.state());
  }
}

void S2App_Sensor_History_SensorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Sensor_History_SensorData::CopyFrom(const S2App_Sensor_History_SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Sensor_History_SensorData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void S2App_Sensor_History_SensorData::Swap(S2App_Sensor_History_SensorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Sensor_History_SensorData::InternalSwap(S2App_Sensor_History_SensorData* other) {
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(value1_, other->value1_);
  std::swap(value2_, other->value2_);
  std::swap(value3_, other->value3_);
  std::swap(offset_value1_, other->offset_value1_);
  std::swap(offset_value2_, other->offset_value2_);
  std::swap(offset_value3_, other->offset_value3_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Sensor_History_SensorData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Sensor_History_SensorData

// required uint32 state = 1;
bool S2App_Sensor_History_SensorData::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
void S2App_Sensor_History_SensorData::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
void S2App_Sensor_History_SensorData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 S2App_Sensor_History_SensorData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.state)
  return state_;
}
void S2App_Sensor_History_SensorData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.state)
}

// required double longitude = 2;
bool S2App_Sensor_History_SensorData::has_longitude() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_longitude() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Sensor_History_SensorData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Sensor_History_SensorData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double S2App_Sensor_History_SensorData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.longitude)
  return longitude_;
}
void S2App_Sensor_History_SensorData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.longitude)
}

// required double latitude = 3;
bool S2App_Sensor_History_SensorData::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_Sensor_History_SensorData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_Sensor_History_SensorData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double S2App_Sensor_History_SensorData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.latitude)
  return latitude_;
}
void S2App_Sensor_History_SensorData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.latitude)
}

// required double value1 = 4;
bool S2App_Sensor_History_SensorData::has_value1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_value1() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_Sensor_History_SensorData::clear_has_value1() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_Sensor_History_SensorData::clear_value1() {
  value1_ = 0;
  clear_has_value1();
}
double S2App_Sensor_History_SensorData::value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value1)
  return value1_;
}
void S2App_Sensor_History_SensorData::set_value1(double value) {
  set_has_value1();
  value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value1)
}

// required double value2 = 5;
bool S2App_Sensor_History_SensorData::has_value2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_value2() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_Sensor_History_SensorData::clear_has_value2() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_Sensor_History_SensorData::clear_value2() {
  value2_ = 0;
  clear_has_value2();
}
double S2App_Sensor_History_SensorData::value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value2)
  return value2_;
}
void S2App_Sensor_History_SensorData::set_value2(double value) {
  set_has_value2();
  value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value2)
}

// required double value3 = 6;
bool S2App_Sensor_History_SensorData::has_value3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_value3() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_Sensor_History_SensorData::clear_has_value3() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_Sensor_History_SensorData::clear_value3() {
  value3_ = 0;
  clear_has_value3();
}
double S2App_Sensor_History_SensorData::value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value3)
  return value3_;
}
void S2App_Sensor_History_SensorData::set_value3(double value) {
  set_has_value3();
  value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.value3)
}

// required double offset_value1 = 7;
bool S2App_Sensor_History_SensorData::has_offset_value1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_offset_value1() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_Sensor_History_SensorData::clear_has_offset_value1() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_Sensor_History_SensorData::clear_offset_value1() {
  offset_value1_ = 0;
  clear_has_offset_value1();
}
double S2App_Sensor_History_SensorData::offset_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value1)
  return offset_value1_;
}
void S2App_Sensor_History_SensorData::set_offset_value1(double value) {
  set_has_offset_value1();
  offset_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value1)
}

// required double offset_value2 = 8;
bool S2App_Sensor_History_SensorData::has_offset_value2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_offset_value2() {
  _has_bits_[0] |= 0x00000040u;
}
void S2App_Sensor_History_SensorData::clear_has_offset_value2() {
  _has_bits_[0] &= ~0x00000040u;
}
void S2App_Sensor_History_SensorData::clear_offset_value2() {
  offset_value2_ = 0;
  clear_has_offset_value2();
}
double S2App_Sensor_History_SensorData::offset_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value2)
  return offset_value2_;
}
void S2App_Sensor_History_SensorData::set_offset_value2(double value) {
  set_has_offset_value2();
  offset_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value2)
}

// required double offset_value3 = 9;
bool S2App_Sensor_History_SensorData::has_offset_value3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void S2App_Sensor_History_SensorData::set_has_offset_value3() {
  _has_bits_[0] |= 0x00000080u;
}
void S2App_Sensor_History_SensorData::clear_has_offset_value3() {
  _has_bits_[0] &= ~0x00000080u;
}
void S2App_Sensor_History_SensorData::clear_offset_value3() {
  offset_value3_ = 0;
  clear_has_offset_value3();
}
double S2App_Sensor_History_SensorData::offset_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value3)
  return offset_value3_;
}
void S2App_Sensor_History_SensorData::set_offset_value3(double value) {
  set_has_offset_value3();
  offset_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData.offset_value3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_Sensor_History::kIdFieldNumber;
const int S2App_Sensor_History::kBeginTimeFieldNumber;
const int S2App_Sensor_History::kEndTimeFieldNumber;
const int S2App_Sensor_History::kAvgValue1FieldNumber;
const int S2App_Sensor_History::kAvgValue2FieldNumber;
const int S2App_Sensor_History::kAvgValue3FieldNumber;
const int S2App_Sensor_History::kHistoryListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_Sensor_History::S2App_Sensor_History()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_Sensor_History)
}
S2App_Sensor_History::S2App_Sensor_History(const S2App_Sensor_History& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      history_list_(from.history_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&id_) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_Sensor_History)
}

void S2App_Sensor_History::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&id_) + sizeof(end_time_));
}

S2App_Sensor_History::~S2App_Sensor_History() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  SharedDtor();
}

void S2App_Sensor_History::SharedDtor() {
}

void S2App_Sensor_History::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_Sensor_History::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_Sensor_History& S2App_Sensor_History::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_Sensor_History* S2App_Sensor_History::New(::google::protobuf::Arena* arena) const {
  S2App_Sensor_History* n = new S2App_Sensor_History;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_Sensor_History::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  history_list_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&id_) + sizeof(end_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_Sensor_History::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 begin_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_begin_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 end_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_end_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double avg_value1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_avg_value1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double avg_value2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_avg_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double avg_value3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_avg_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_history_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  return false;
#undef DO_
}

void S2App_Sensor_History::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 begin_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->begin_time(), output);
  }

  // required uint32 end_time = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->end_time(), output);
  }

  // required double avg_value1 = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->avg_value1(), output);
  }

  // required double avg_value2 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->avg_value2(), output);
  }

  // required double avg_value3 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->avg_value3(), output);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 7;
  for (unsigned int i = 0, n = this->history_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->history_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_Sensor_History)
}

::google::protobuf::uint8* S2App_Sensor_History::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 begin_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->begin_time(), target);
  }

  // required uint32 end_time = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->end_time(), target);
  }

  // required double avg_value1 = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->avg_value1(), target);
  }

  // required double avg_value2 = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->avg_value2(), target);
  }

  // required double avg_value3 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->avg_value3(), target);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 7;
  for (unsigned int i = 0, n = this->history_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->history_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  return target;
}

size_t S2App_Sensor_History::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_begin_time()) {
    // required uint32 begin_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());
  }

  if (has_avg_value1()) {
    // required double avg_value1 = 4;
    total_size += 1 + 8;
  }

  if (has_avg_value2()) {
    // required double avg_value2 = 5;
    total_size += 1 + 8;
  }

  if (has_avg_value3()) {
    // required double avg_value3 = 6;
    total_size += 1 + 8;
  }

  if (has_end_time()) {
    // required uint32 end_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  return total_size;
}
size_t S2App_Sensor_History::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 begin_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->begin_time());

    // required double avg_value1 = 4;
    total_size += 1 + 8;

    // required double avg_value2 = 5;
    total_size += 1 + 8;

    // required double avg_value3 = 6;
    total_size += 1 + 8;

    // required uint32 end_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 7;
  {
    unsigned int count = this->history_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->history_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_Sensor_History::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_Sensor_History* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_Sensor_History>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_Sensor_History)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_Sensor_History)
    MergeFrom(*source);
  }
}

void S2App_Sensor_History::MergeFrom(const S2App_Sensor_History& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  history_list_.MergeFrom(from.history_list_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      begin_time_ = from.begin_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      avg_value1_ = from.avg_value1_;
    }
    if (cached_has_bits & 0x00000008u) {
      avg_value2_ = from.avg_value2_;
    }
    if (cached_has_bits & 0x00000010u) {
      avg_value3_ = from.avg_value3_;
    }
    if (cached_has_bits & 0x00000020u) {
      end_time_ = from.end_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_Sensor_History::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_Sensor_History::CopyFrom(const S2App_Sensor_History& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_Sensor_History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_Sensor_History::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->history_list())) return false;
  return true;
}

void S2App_Sensor_History::Swap(S2App_Sensor_History* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_Sensor_History::InternalSwap(S2App_Sensor_History* other) {
  history_list_.InternalSwap(&other->history_list_);
  std::swap(id_, other->id_);
  std::swap(begin_time_, other->begin_time_);
  std::swap(avg_value1_, other->avg_value1_);
  std::swap(avg_value2_, other->avg_value2_);
  std::swap(avg_value3_, other->avg_value3_);
  std::swap(end_time_, other->end_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_Sensor_History::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_Sensor_History

// required uint32 id = 1;
bool S2App_Sensor_History::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_Sensor_History::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_Sensor_History::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_Sensor_History::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_Sensor_History::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.id)
  return id_;
}
void S2App_Sensor_History::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.id)
}

// required uint32 begin_time = 2;
bool S2App_Sensor_History::has_begin_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_Sensor_History::set_has_begin_time() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_Sensor_History::clear_has_begin_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_Sensor_History::clear_begin_time() {
  begin_time_ = 0u;
  clear_has_begin_time();
}
::google::protobuf::uint32 S2App_Sensor_History::begin_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.begin_time)
  return begin_time_;
}
void S2App_Sensor_History::set_begin_time(::google::protobuf::uint32 value) {
  set_has_begin_time();
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.begin_time)
}

// required uint32 end_time = 3;
bool S2App_Sensor_History::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_Sensor_History::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_Sensor_History::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_Sensor_History::clear_end_time() {
  end_time_ = 0u;
  clear_has_end_time();
}
::google::protobuf::uint32 S2App_Sensor_History::end_time() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.end_time)
  return end_time_;
}
void S2App_Sensor_History::set_end_time(::google::protobuf::uint32 value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.end_time)
}

// required double avg_value1 = 4;
bool S2App_Sensor_History::has_avg_value1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_Sensor_History::set_has_avg_value1() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_Sensor_History::clear_has_avg_value1() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_Sensor_History::clear_avg_value1() {
  avg_value1_ = 0;
  clear_has_avg_value1();
}
double S2App_Sensor_History::avg_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value1)
  return avg_value1_;
}
void S2App_Sensor_History::set_avg_value1(double value) {
  set_has_avg_value1();
  avg_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value1)
}

// required double avg_value2 = 5;
bool S2App_Sensor_History::has_avg_value2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_Sensor_History::set_has_avg_value2() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_Sensor_History::clear_has_avg_value2() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_Sensor_History::clear_avg_value2() {
  avg_value2_ = 0;
  clear_has_avg_value2();
}
double S2App_Sensor_History::avg_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value2)
  return avg_value2_;
}
void S2App_Sensor_History::set_avg_value2(double value) {
  set_has_avg_value2();
  avg_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value2)
}

// required double avg_value3 = 6;
bool S2App_Sensor_History::has_avg_value3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_Sensor_History::set_has_avg_value3() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_Sensor_History::clear_has_avg_value3() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_Sensor_History::clear_avg_value3() {
  avg_value3_ = 0;
  clear_has_avg_value3();
}
double S2App_Sensor_History::avg_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value3)
  return avg_value3_;
}
void S2App_Sensor_History::set_avg_value3(double value) {
  set_has_avg_value3();
  avg_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_Sensor_History.avg_value3)
}

// repeated .APP_SERVER_NET_Protocol.S2App_Sensor_History.SensorData history_list = 7;
int S2App_Sensor_History::history_list_size() const {
  return history_list_.size();
}
void S2App_Sensor_History::clear_history_list() {
  history_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData& S2App_Sensor_History::history_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* S2App_Sensor_History::mutable_history_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData* S2App_Sensor_History::add_history_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >*
S2App_Sensor_History::mutable_history_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return &history_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_Sensor_History_SensorData >&
S2App_Sensor_History::history_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_Sensor_History.history_list)
  return history_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_All_List_SlopeData::kIdFieldNumber;
const int S2App_All_List_SlopeData::kTypeFieldNumber;
const int S2App_All_List_SlopeData::kNameFieldNumber;
const int S2App_All_List_SlopeData::kStateFieldNumber;
const int S2App_All_List_SlopeData::kLongitudeFieldNumber;
const int S2App_All_List_SlopeData::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_All_List_SlopeData::S2App_All_List_SlopeData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
}
S2App_All_List_SlopeData::S2App_All_List_SlopeData(const S2App_All_List_SlopeData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
}

void S2App_All_List_SlopeData::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
}

S2App_All_List_SlopeData::~S2App_All_List_SlopeData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  SharedDtor();
}

void S2App_All_List_SlopeData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2App_All_List_SlopeData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_All_List_SlopeData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_All_List_SlopeData& S2App_All_List_SlopeData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_All_List_SlopeData* S2App_All_List_SlopeData::New(::google::protobuf::Arena* arena) const {
  S2App_All_List_SlopeData* n = new S2App_All_List_SlopeData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_All_List_SlopeData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_All_List_SlopeData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  return false;
#undef DO_
}

void S2App_All_List_SlopeData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // required uint32 state = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // required double longitude = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->longitude(), output);
  }

  // required double latitude = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
}

::google::protobuf::uint8* S2App_All_List_SlopeData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required bytes name = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // required uint32 state = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // required double longitude = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->longitude(), target);
  }

  // required double latitude = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  return target;
}

size_t S2App_All_List_SlopeData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  size_t total_size = 0;

  if (has_name()) {
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_type()) {
    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_longitude()) {
    // required double longitude = 5;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 6;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required uint32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  return total_size;
}
size_t S2App_All_List_SlopeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required bytes name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required double longitude = 5;
    total_size += 1 + 8;

    // required double latitude = 6;
    total_size += 1 + 8;

    // required uint32 state = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_All_List_SlopeData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_All_List_SlopeData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_All_List_SlopeData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
    MergeFrom(*source);
  }
}

void S2App_All_List_SlopeData::MergeFrom(const S2App_All_List_SlopeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_All_List_SlopeData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_All_List_SlopeData::CopyFrom(const S2App_All_List_SlopeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_All_List_SlopeData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void S2App_All_List_SlopeData::Swap(S2App_All_List_SlopeData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_All_List_SlopeData::InternalSwap(S2App_All_List_SlopeData* other) {
  name_.Swap(&other->name_);
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_All_List_SlopeData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_All_List_SlopeData

// required uint32 id = 1;
bool S2App_All_List_SlopeData::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_All_List_SlopeData::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_All_List_SlopeData::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_All_List_SlopeData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_All_List_SlopeData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.id)
  return id_;
}
void S2App_All_List_SlopeData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.id)
}

// required uint32 type = 2;
bool S2App_All_List_SlopeData::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_All_List_SlopeData::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_All_List_SlopeData::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_All_List_SlopeData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 S2App_All_List_SlopeData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.type)
  return type_;
}
void S2App_All_List_SlopeData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.type)
}

// required bytes name = 3;
bool S2App_All_List_SlopeData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_All_List_SlopeData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_All_List_SlopeData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_All_List_SlopeData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& S2App_All_List_SlopeData::name() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
  return name_.GetNoArena();
}
void S2App_All_List_SlopeData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
}
#if LANG_CXX11
void S2App_All_List_SlopeData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
}
#endif
void S2App_All_List_SlopeData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
}
void S2App_All_List_SlopeData::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
}
::std::string* S2App_All_List_SlopeData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* S2App_All_List_SlopeData::release_name() {
  // @@protoc_insertion_point(field_release:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void S2App_All_List_SlopeData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.name)
}

// required uint32 state = 4;
bool S2App_All_List_SlopeData::has_state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_All_List_SlopeData::set_has_state() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_All_List_SlopeData::clear_has_state() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_All_List_SlopeData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 S2App_All_List_SlopeData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.state)
  return state_;
}
void S2App_All_List_SlopeData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.state)
}

// required double longitude = 5;
bool S2App_All_List_SlopeData::has_longitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_All_List_SlopeData::set_has_longitude() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_All_List_SlopeData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_All_List_SlopeData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double S2App_All_List_SlopeData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.longitude)
  return longitude_;
}
void S2App_All_List_SlopeData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.longitude)
}

// required double latitude = 6;
bool S2App_All_List_SlopeData::has_latitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_All_List_SlopeData::set_has_latitude() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_All_List_SlopeData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_All_List_SlopeData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double S2App_All_List_SlopeData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.latitude)
  return latitude_;
}
void S2App_All_List_SlopeData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SlopeData.latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_All_List_SensorData::kIdFieldNumber;
const int S2App_All_List_SensorData::kTypeFieldNumber;
const int S2App_All_List_SensorData::kStateFieldNumber;
const int S2App_All_List_SensorData::kLongitudeFieldNumber;
const int S2App_All_List_SensorData::kLatitudeFieldNumber;
const int S2App_All_List_SensorData::kCurValue1FieldNumber;
const int S2App_All_List_SensorData::kCurValue2FieldNumber;
const int S2App_All_List_SensorData::kCurValue3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_All_List_SensorData::S2App_All_List_SensorData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
}
S2App_All_List_SensorData::S2App_All_List_SensorData(const S2App_All_List_SensorData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
}

void S2App_All_List_SensorData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_) + sizeof(state_));
}

S2App_All_List_SensorData::~S2App_All_List_SensorData() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  SharedDtor();
}

void S2App_All_List_SensorData::SharedDtor() {
}

void S2App_All_List_SensorData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_All_List_SensorData::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_All_List_SensorData& S2App_All_List_SensorData::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_All_List_SensorData* S2App_All_List_SensorData::New(::google::protobuf::Arena* arena) const {
  S2App_All_List_SensorData* n = new S2App_All_List_SensorData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_All_List_SensorData::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_All_List_SensorData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double latitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value1 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_cur_value1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value2 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_cur_value2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double cur_value3 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u)) {
          set_has_cur_value3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cur_value3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  return false;
#undef DO_
}

void S2App_All_List_SensorData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required uint32 state = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->state(), output);
  }

  // required double longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->longitude(), output);
  }

  // required double latitude = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->latitude(), output);
  }

  // required double cur_value1 = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->cur_value1(), output);
  }

  // required double cur_value2 = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->cur_value2(), output);
  }

  // required double cur_value3 = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->cur_value3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
}

::google::protobuf::uint8* S2App_All_List_SensorData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required uint32 state = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->state(), target);
  }

  // required double longitude = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->longitude(), target);
  }

  // required double latitude = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->latitude(), target);
  }

  // required double cur_value1 = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->cur_value1(), target);
  }

  // required double cur_value2 = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->cur_value2(), target);
  }

  // required double cur_value3 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->cur_value3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  return target;
}

size_t S2App_All_List_SensorData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_type()) {
    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_longitude()) {
    // required double longitude = 4;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double latitude = 5;
    total_size += 1 + 8;
  }

  if (has_cur_value1()) {
    // required double cur_value1 = 6;
    total_size += 1 + 8;
  }

  if (has_cur_value2()) {
    // required double cur_value2 = 7;
    total_size += 1 + 8;
  }

  if (has_cur_value3()) {
    // required double cur_value3 = 8;
    total_size += 1 + 8;
  }

  if (has_state()) {
    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  return total_size;
}
size_t S2App_All_List_SensorData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required double longitude = 4;
    total_size += 1 + 8;

    // required double latitude = 5;
    total_size += 1 + 8;

    // required double cur_value1 = 6;
    total_size += 1 + 8;

    // required double cur_value2 = 7;
    total_size += 1 + 8;

    // required double cur_value3 = 8;
    total_size += 1 + 8;

    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_All_List_SensorData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_All_List_SensorData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_All_List_SensorData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
    MergeFrom(*source);
  }
}

void S2App_All_List_SensorData::MergeFrom(const S2App_All_List_SensorData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      cur_value1_ = from.cur_value1_;
    }
    if (cached_has_bits & 0x00000020u) {
      cur_value2_ = from.cur_value2_;
    }
    if (cached_has_bits & 0x00000040u) {
      cur_value3_ = from.cur_value3_;
    }
    if (cached_has_bits & 0x00000080u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void S2App_All_List_SensorData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_All_List_SensorData::CopyFrom(const S2App_All_List_SensorData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List.SensorData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_All_List_SensorData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;
  return true;
}

void S2App_All_List_SensorData::Swap(S2App_All_List_SensorData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_All_List_SensorData::InternalSwap(S2App_All_List_SensorData* other) {
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(cur_value1_, other->cur_value1_);
  std::swap(cur_value2_, other->cur_value2_);
  std::swap(cur_value3_, other->cur_value3_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_All_List_SensorData::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_All_List_SensorData

// required uint32 id = 1;
bool S2App_All_List_SensorData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void S2App_All_List_SensorData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void S2App_All_List_SensorData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void S2App_All_List_SensorData::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 S2App_All_List_SensorData::id() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.id)
  return id_;
}
void S2App_All_List_SensorData::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.id)
}

// required uint32 type = 2;
bool S2App_All_List_SensorData::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void S2App_All_List_SensorData::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void S2App_All_List_SensorData::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void S2App_All_List_SensorData::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 S2App_All_List_SensorData::type() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.type)
  return type_;
}
void S2App_All_List_SensorData::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.type)
}

// required uint32 state = 3;
bool S2App_All_List_SensorData::has_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void S2App_All_List_SensorData::set_has_state() {
  _has_bits_[0] |= 0x00000080u;
}
void S2App_All_List_SensorData::clear_has_state() {
  _has_bits_[0] &= ~0x00000080u;
}
void S2App_All_List_SensorData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 S2App_All_List_SensorData::state() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.state)
  return state_;
}
void S2App_All_List_SensorData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.state)
}

// required double longitude = 4;
bool S2App_All_List_SensorData::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void S2App_All_List_SensorData::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void S2App_All_List_SensorData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void S2App_All_List_SensorData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double S2App_All_List_SensorData::longitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.longitude)
  return longitude_;
}
void S2App_All_List_SensorData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.longitude)
}

// required double latitude = 5;
bool S2App_All_List_SensorData::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void S2App_All_List_SensorData::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
void S2App_All_List_SensorData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void S2App_All_List_SensorData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double S2App_All_List_SensorData::latitude() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.latitude)
  return latitude_;
}
void S2App_All_List_SensorData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.latitude)
}

// required double cur_value1 = 6;
bool S2App_All_List_SensorData::has_cur_value1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void S2App_All_List_SensorData::set_has_cur_value1() {
  _has_bits_[0] |= 0x00000010u;
}
void S2App_All_List_SensorData::clear_has_cur_value1() {
  _has_bits_[0] &= ~0x00000010u;
}
void S2App_All_List_SensorData::clear_cur_value1() {
  cur_value1_ = 0;
  clear_has_cur_value1();
}
double S2App_All_List_SensorData::cur_value1() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value1)
  return cur_value1_;
}
void S2App_All_List_SensorData::set_cur_value1(double value) {
  set_has_cur_value1();
  cur_value1_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value1)
}

// required double cur_value2 = 7;
bool S2App_All_List_SensorData::has_cur_value2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void S2App_All_List_SensorData::set_has_cur_value2() {
  _has_bits_[0] |= 0x00000020u;
}
void S2App_All_List_SensorData::clear_has_cur_value2() {
  _has_bits_[0] &= ~0x00000020u;
}
void S2App_All_List_SensorData::clear_cur_value2() {
  cur_value2_ = 0;
  clear_has_cur_value2();
}
double S2App_All_List_SensorData::cur_value2() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value2)
  return cur_value2_;
}
void S2App_All_List_SensorData::set_cur_value2(double value) {
  set_has_cur_value2();
  cur_value2_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value2)
}

// required double cur_value3 = 8;
bool S2App_All_List_SensorData::has_cur_value3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void S2App_All_List_SensorData::set_has_cur_value3() {
  _has_bits_[0] |= 0x00000040u;
}
void S2App_All_List_SensorData::clear_has_cur_value3() {
  _has_bits_[0] &= ~0x00000040u;
}
void S2App_All_List_SensorData::clear_cur_value3() {
  cur_value3_ = 0;
  clear_has_cur_value3();
}
double S2App_All_List_SensorData::cur_value3() const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value3)
  return cur_value3_;
}
void S2App_All_List_SensorData::set_cur_value3(double value) {
  set_has_cur_value3();
  cur_value3_ = value;
  // @@protoc_insertion_point(field_set:APP_SERVER_NET_Protocol.S2App_All_List.SensorData.cur_value3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2App_All_List::kSlopeListFieldNumber;
const int S2App_All_List::kSensorListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2App_All_List::S2App_All_List()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:APP_SERVER_NET_Protocol.S2App_All_List)
}
S2App_All_List::S2App_All_List(const S2App_All_List& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      slope_list_(from.slope_list_),
      sensor_list_(from.sensor_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:APP_SERVER_NET_Protocol.S2App_All_List)
}

void S2App_All_List::SharedCtor() {
  _cached_size_ = 0;
}

S2App_All_List::~S2App_All_List() {
  // @@protoc_insertion_point(destructor:APP_SERVER_NET_Protocol.S2App_All_List)
  SharedDtor();
}

void S2App_All_List::SharedDtor() {
}

void S2App_All_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2App_All_List::descriptor() {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2App_All_List& S2App_All_List::default_instance() {
  protobuf_App_5fServer_5fProtocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

S2App_All_List* S2App_All_List::New(::google::protobuf::Arena* arena) const {
  S2App_All_List* n = new S2App_All_List;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2App_All_List::Clear() {
// @@protoc_insertion_point(message_clear_start:APP_SERVER_NET_Protocol.S2App_All_List)
  slope_list_.Clear();
  sensor_list_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2App_All_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APP_SERVER_NET_Protocol.S2App_All_List)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SlopeData slope_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slope_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SensorData sensor_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sensor_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APP_SERVER_NET_Protocol.S2App_All_List)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APP_SERVER_NET_Protocol.S2App_All_List)
  return false;
#undef DO_
}

void S2App_All_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APP_SERVER_NET_Protocol.S2App_All_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SlopeData slope_list = 1;
  for (unsigned int i = 0, n = this->slope_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->slope_list(i), output);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SensorData sensor_list = 2;
  for (unsigned int i = 0, n = this->sensor_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sensor_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APP_SERVER_NET_Protocol.S2App_All_List)
}

::google::protobuf::uint8* S2App_All_List::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APP_SERVER_NET_Protocol.S2App_All_List)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SlopeData slope_list = 1;
  for (unsigned int i = 0, n = this->slope_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->slope_list(i), deterministic, target);
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SensorData sensor_list = 2;
  for (unsigned int i = 0, n = this->sensor_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->sensor_list(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APP_SERVER_NET_Protocol.S2App_All_List)
  return target;
}

size_t S2App_All_List::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:APP_SERVER_NET_Protocol.S2App_All_List)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SlopeData slope_list = 1;
  {
    unsigned int count = this->slope_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->slope_list(i));
    }
  }

  // repeated .APP_SERVER_NET_Protocol.S2App_All_List.SensorData sensor_list = 2;
  {
    unsigned int count = this->sensor_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sensor_list(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2App_All_List::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List)
  GOOGLE_DCHECK_NE(&from, this);
  const S2App_All_List* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2App_All_List>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APP_SERVER_NET_Protocol.S2App_All_List)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APP_SERVER_NET_Protocol.S2App_All_List)
    MergeFrom(*source);
  }
}

void S2App_All_List::MergeFrom(const S2App_All_List& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APP_SERVER_NET_Protocol.S2App_All_List)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slope_list_.MergeFrom(from.slope_list_);
  sensor_list_.MergeFrom(from.sensor_list_);
}

void S2App_All_List::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2App_All_List::CopyFrom(const S2App_All_List& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APP_SERVER_NET_Protocol.S2App_All_List)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2App_All_List::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->slope_list())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->sensor_list())) return false;
  return true;
}

void S2App_All_List::Swap(S2App_All_List* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2App_All_List::InternalSwap(S2App_All_List* other) {
  slope_list_.InternalSwap(&other->slope_list_);
  sensor_list_.InternalSwap(&other->sensor_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2App_All_List::GetMetadata() const {
  protobuf_App_5fServer_5fProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_App_5fServer_5fProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// S2App_All_List

// repeated .APP_SERVER_NET_Protocol.S2App_All_List.SlopeData slope_list = 1;
int S2App_All_List::slope_list_size() const {
  return slope_list_.size();
}
void S2App_All_List::clear_slope_list() {
  slope_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_All_List_SlopeData& S2App_All_List::slope_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.slope_list)
  return slope_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_All_List_SlopeData* S2App_All_List::mutable_slope_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_All_List.slope_list)
  return slope_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_All_List_SlopeData* S2App_All_List::add_slope_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_All_List.slope_list)
  return slope_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_All_List_SlopeData >*
S2App_All_List::mutable_slope_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_All_List.slope_list)
  return &slope_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_All_List_SlopeData >&
S2App_All_List::slope_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_All_List.slope_list)
  return slope_list_;
}

// repeated .APP_SERVER_NET_Protocol.S2App_All_List.SensorData sensor_list = 2;
int S2App_All_List::sensor_list_size() const {
  return sensor_list_.size();
}
void S2App_All_List::clear_sensor_list() {
  sensor_list_.Clear();
}
const ::APP_SERVER_NET_Protocol::S2App_All_List_SensorData& S2App_All_List::sensor_list(int index) const {
  // @@protoc_insertion_point(field_get:APP_SERVER_NET_Protocol.S2App_All_List.sensor_list)
  return sensor_list_.Get(index);
}
::APP_SERVER_NET_Protocol::S2App_All_List_SensorData* S2App_All_List::mutable_sensor_list(int index) {
  // @@protoc_insertion_point(field_mutable:APP_SERVER_NET_Protocol.S2App_All_List.sensor_list)
  return sensor_list_.Mutable(index);
}
::APP_SERVER_NET_Protocol::S2App_All_List_SensorData* S2App_All_List::add_sensor_list() {
  // @@protoc_insertion_point(field_add:APP_SERVER_NET_Protocol.S2App_All_List.sensor_list)
  return sensor_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_All_List_SensorData >*
S2App_All_List::mutable_sensor_list() {
  // @@protoc_insertion_point(field_mutable_list:APP_SERVER_NET_Protocol.S2App_All_List.sensor_list)
  return &sensor_list_;
}
const ::google::protobuf::RepeatedPtrField< ::APP_SERVER_NET_Protocol::S2App_All_List_SensorData >&
S2App_All_List::sensor_list() const {
  // @@protoc_insertion_point(field_list:APP_SERVER_NET_Protocol.S2App_All_List.sensor_list)
  return sensor_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace APP_SERVER_NET_Protocol

// @@protoc_insertion_point(global_scope)
