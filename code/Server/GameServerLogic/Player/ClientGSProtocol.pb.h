// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientGSProtocol.proto

#ifndef PROTOBUF_ClientGSProtocol_2eproto__INCLUDED
#define PROTOBUF_ClientGSProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ClientGSPack {
class C2S_CHAT_MESSAGE;
class C2S_CHAT_MESSAGEDefaultTypeInternal;
extern C2S_CHAT_MESSAGEDefaultTypeInternal _C2S_CHAT_MESSAGE_default_instance_;
class S2C_CHAT_MESSAGE;
class S2C_CHAT_MESSAGEDefaultTypeInternal;
extern S2C_CHAT_MESSAGEDefaultTypeInternal _S2C_CHAT_MESSAGE_default_instance_;
}  // namespace ClientGSPack

namespace ClientGSPack {

namespace protobuf_ClientGSProtocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ClientGSProtocol_2eproto

// ===================================================================

class C2S_CHAT_MESSAGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientGSPack.C2S_CHAT_MESSAGE) */ {
 public:
  C2S_CHAT_MESSAGE();
  virtual ~C2S_CHAT_MESSAGE();

  C2S_CHAT_MESSAGE(const C2S_CHAT_MESSAGE& from);

  inline C2S_CHAT_MESSAGE& operator=(const C2S_CHAT_MESSAGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_CHAT_MESSAGE& default_instance();

  static inline const C2S_CHAT_MESSAGE* internal_default_instance() {
    return reinterpret_cast<const C2S_CHAT_MESSAGE*>(
               &_C2S_CHAT_MESSAGE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C2S_CHAT_MESSAGE* other);

  // implements Message ----------------------------------------------

  inline C2S_CHAT_MESSAGE* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S_CHAT_MESSAGE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S_CHAT_MESSAGE& from);
  void MergeFrom(const C2S_CHAT_MESSAGE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S_CHAT_MESSAGE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes strMsg = 1;
  bool has_strmsg() const;
  void clear_strmsg();
  static const int kStrMsgFieldNumber = 1;
  const ::std::string& strmsg() const;
  void set_strmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_strmsg(::std::string&& value);
  #endif
  void set_strmsg(const char* value);
  void set_strmsg(const void* value, size_t size);
  ::std::string* mutable_strmsg();
  ::std::string* release_strmsg();
  void set_allocated_strmsg(::std::string* strmsg);

  // @@protoc_insertion_point(class_scope:ClientGSPack.C2S_CHAT_MESSAGE)
 private:
  void set_has_strmsg();
  void clear_has_strmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strmsg_;
  friend struct protobuf_ClientGSProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2C_CHAT_MESSAGE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ClientGSPack.S2C_CHAT_MESSAGE) */ {
 public:
  S2C_CHAT_MESSAGE();
  virtual ~S2C_CHAT_MESSAGE();

  S2C_CHAT_MESSAGE(const S2C_CHAT_MESSAGE& from);

  inline S2C_CHAT_MESSAGE& operator=(const S2C_CHAT_MESSAGE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_CHAT_MESSAGE& default_instance();

  static inline const S2C_CHAT_MESSAGE* internal_default_instance() {
    return reinterpret_cast<const S2C_CHAT_MESSAGE*>(
               &_S2C_CHAT_MESSAGE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(S2C_CHAT_MESSAGE* other);

  // implements Message ----------------------------------------------

  inline S2C_CHAT_MESSAGE* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C_CHAT_MESSAGE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C_CHAT_MESSAGE& from);
  void MergeFrom(const S2C_CHAT_MESSAGE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C_CHAT_MESSAGE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes strMsg = 1;
  bool has_strmsg() const;
  void clear_strmsg();
  static const int kStrMsgFieldNumber = 1;
  const ::std::string& strmsg() const;
  void set_strmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_strmsg(::std::string&& value);
  #endif
  void set_strmsg(const char* value);
  void set_strmsg(const void* value, size_t size);
  ::std::string* mutable_strmsg();
  ::std::string* release_strmsg();
  void set_allocated_strmsg(::std::string* strmsg);

  // @@protoc_insertion_point(class_scope:ClientGSPack.S2C_CHAT_MESSAGE)
 private:
  void set_has_strmsg();
  void clear_has_strmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strmsg_;
  friend struct protobuf_ClientGSProtocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// C2S_CHAT_MESSAGE

// required bytes strMsg = 1;
inline bool C2S_CHAT_MESSAGE::has_strmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_CHAT_MESSAGE::set_has_strmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_CHAT_MESSAGE::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_CHAT_MESSAGE::clear_strmsg() {
  strmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strmsg();
}
inline const ::std::string& C2S_CHAT_MESSAGE::strmsg() const {
  // @@protoc_insertion_point(field_get:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
  return strmsg_.GetNoArena();
}
inline void C2S_CHAT_MESSAGE::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
}
#if LANG_CXX11
inline void C2S_CHAT_MESSAGE::set_strmsg(::std::string&& value) {
  set_has_strmsg();
  strmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
}
#endif
inline void C2S_CHAT_MESSAGE::set_strmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
}
inline void C2S_CHAT_MESSAGE::set_strmsg(const void* value, size_t size) {
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
}
inline ::std::string* C2S_CHAT_MESSAGE::mutable_strmsg() {
  set_has_strmsg();
  // @@protoc_insertion_point(field_mutable:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
  return strmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* C2S_CHAT_MESSAGE::release_strmsg() {
  // @@protoc_insertion_point(field_release:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
  clear_has_strmsg();
  return strmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void C2S_CHAT_MESSAGE::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg != NULL) {
    set_has_strmsg();
  } else {
    clear_has_strmsg();
  }
  strmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmsg);
  // @@protoc_insertion_point(field_set_allocated:ClientGSPack.C2S_CHAT_MESSAGE.strMsg)
}

// -------------------------------------------------------------------

// S2C_CHAT_MESSAGE

// required bytes strMsg = 1;
inline bool S2C_CHAT_MESSAGE::has_strmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_CHAT_MESSAGE::set_has_strmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_CHAT_MESSAGE::clear_has_strmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_CHAT_MESSAGE::clear_strmsg() {
  strmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strmsg();
}
inline const ::std::string& S2C_CHAT_MESSAGE::strmsg() const {
  // @@protoc_insertion_point(field_get:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
  return strmsg_.GetNoArena();
}
inline void S2C_CHAT_MESSAGE::set_strmsg(const ::std::string& value) {
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
}
#if LANG_CXX11
inline void S2C_CHAT_MESSAGE::set_strmsg(::std::string&& value) {
  set_has_strmsg();
  strmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
}
#endif
inline void S2C_CHAT_MESSAGE::set_strmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
}
inline void S2C_CHAT_MESSAGE::set_strmsg(const void* value, size_t size) {
  set_has_strmsg();
  strmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
}
inline ::std::string* S2C_CHAT_MESSAGE::mutable_strmsg() {
  set_has_strmsg();
  // @@protoc_insertion_point(field_mutable:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
  return strmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2C_CHAT_MESSAGE::release_strmsg() {
  // @@protoc_insertion_point(field_release:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
  clear_has_strmsg();
  return strmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2C_CHAT_MESSAGE::set_allocated_strmsg(::std::string* strmsg) {
  if (strmsg != NULL) {
    set_has_strmsg();
  } else {
    clear_has_strmsg();
  }
  strmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strmsg);
  // @@protoc_insertion_point(field_set_allocated:ClientGSPack.S2C_CHAT_MESSAGE.strMsg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ClientGSPack

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ClientGSProtocol_2eproto__INCLUDED
